
function HOME()
MN = gg.choice({
"·ó©·ëéTI·ó∑·ó©·ëé ·ó∞·ó¥·ëé·ëå",
"·óØ·ó©·í™·ïº·ó©·ëïK",
"’èI·í™·ó©·ïº ·ïºI·í™·ó¥’èI",
"·ñá·ó©·ëéK ·ë≠·ëå’è·ïº",
"·ó¥·òú·í™·ó¥·ëé·ëï·ó¥ ·ó∞·ó¥·ëé·ëå ",
"OY·ëå·ëé ·ó∞·ó¥·ëé·ëå",
"·ñ¥·í™·ó©’è·ïº ·ó∞·ó¥·ëé·ëå",
"’èKI·ëé ·ïºI·í™·ó¥’èI",
"·ëïIKI’è",
}, nil, "·í™·ó¥·ô≠O·ëé ·êØI·ë≠ ·òú·òú ·êØ·ó¥·ñá’èIO·ëé")
if MN == nil then
else 
if MN == 1 then AntibanMenu()end -- Decrypt CVaRy
if MN == 2 then WALLHACK()end -- Decrypt CVaRy
if MN == 3 then HileMenu()end -- Decrypt CVaRy
if MN == 4 then RankPush()end -- Decrypt CVaRy
if MN == 5 then HizMenu()end -- Decrypt CVaRy
if MN == 6 then OyunMenu()end -- Decrypt CVaRy
if MN == 7 then hiz()end -- Decrypt CVaRy
if MN == 8 then UcmaMenu()end -- Decrypt CVaRy
if MN == 9 then EXIT()end -- Decrypt CVaRy
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy

function AntibanMenu()
WN = gg.multiChoice({
"·ó©·ëéTI·ó∑·ó©·ëé",
"·ó©·ëéTI·ó∑·ó©·ëé ·êØ2 ’èO·ëé·ñá·ó© ·ó∑·ëå",
"·êØI·ñáT·ëå·ó©·í™ ·ó©·ëéTI·ó∑·ó©·ëé",
"·í™O·òú ’èI·í™",
"üÖ∂Ô∏éüÖ¥Ô∏éüÜÅÔ∏éüÖ∏Ô∏é",
}, nil, "·ó©·ëéTI·ó∑·ó©·ëé ·ó∞·ó¥·ëé·ëå")
if WN == nil then
else
if WN[1] == true then Global()end -- Decrypt CVaRy
if WN[2] == true then Kore()end -- Decrypt CVaRy
if WN[3] == true then Party()end -- Decrypt CVaRy
if WN[4] == true then LogSil()end -- Decrypt CVaRy
if WN[5] == true then HOME()end -- Decrypt CVaRy
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy

function Global()
gg.clearResults()
gg.setVisible(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("133378", gg.TYPE_DWORD)
gg.setVisible(false)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.setVisible(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("4,096;135,682", gg.TYPE_DWORD)
gg.searchNumber("4096", gg.TYPE_DWORD)
gg.setVisible(false)
gg.getResults(500000)
gg.editAll("0", gg.TYPE_DWORD)
gg.setVisible(false)
gg.clearResults()
  print("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÄ‚ñà‚ñÑ")
print("‚îÄ‚îÄ‚îÄ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ")
print("‚îÄ‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà")
print("‚îÄ ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà.‚ñº.‚ñº.‚ñº.‚ñº.‚ñº.‚ñº‚ñº‚ñº‚ñº‚ñº‚ñº")
print("‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚™º·ó©·ëéTI·ó∑·ó©·ëé ·ó©KTI·ñ¥")
print("‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚™º‚û£üáπüá∑")
print("‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚™ºƒ∞nstagram Yok")
print("‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚™º‚û£Youtube Yok")
print(" ‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚™º ‚û£Script Bypass Vipüå≤")
print("‚îÄ‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ.‚ñ≤.‚ñ≤‚ñ≤‚ñ≤‚ñ≤‚ñ≤‚ñ≤‚ñ≤‚ñ≤‚ñ≤‚ñ≤")
print("‚îÄ‚îÄ ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÄ‚ñÄ]]")
      end -- Decrypt CVaRy

function Kore()
gg.clearResults()
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/cache")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/cache/GCloud.ini")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/GameErrorNoRecords")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/tbslog")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/ca-bundle.pem")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/cacheFile.txt")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/login-identifier.txt")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/vmpcloudconfig.json")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/ProgramBinaryCache")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Paks/puffer_temp")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Paks/puffer_res.eifs")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Paks/1375135419_47_0.13.0.11098_20190617165748_1981158817_cures.ifs.res")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/UpdateInfo")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/RoleInfo")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Pandora")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/PufferTmpDir")
os.remove("/data/data/com.tencent.ig/app_appcache")
os.remove("/data/data/com.tencent.ig/app_bugly")
os.remove("/data/data/com.tencent.ig/app_crashrecord")
os.remove("/data/data/com.tencent.ig/cache")
os.remove("/data/data/com.tencent.ig/code_cache")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/cache")
os.remove("/storage/emulated/0/tencent")
os.remove("/storage/emulated/0/MidasOverse")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/tbslog")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/login-identifier.txt")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/cacheFile.txt")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/vmpcloudconfig.json")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/GameErrorNoRecords")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/AntiCheat.ini")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/IGH5CachePluginConfig.ini")
os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/cache")
os.remove("/storage/emulated/0/tencent")
os.remove("/storage/emulated/0/MidasOverse")
os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/tbslog")
os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/login-identifier.txt")
os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/cacheFile.txt")
os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/vmpcloudconfig.json")
os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/GameErrorNoRecords")
os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/AntiCheat.ini")
os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/cache")
os.remove("/storage/emulated/0/tencent")
os.remove("/storage/emulated/0/MidasOverse")
os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/tbslog")
os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/login-identifier.txt")
os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/cacheFile.txt")
os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/vmpcloudconfig.json")
os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/GameErrorNoRecords")
os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/AntiCheat.ini")
os.remove("src/main/java/com/google/errorprone/annotations")
os.remove("src/main/java/com/google/errorprone/annotations")
os.remove("src/main/java/com/google/errorprone/annotations/concurrent")
os.remove("third_party.java_src.error_prone.project.annotations.Google_internal")
os.remove("src/main/java/com/google/errorprone/annotations")
os.remove("src/main/java/com/google/errorprone/annotations")
os.remove("src/main/java/com/google/errorprone/annotations/concurrent")
os.remove("third_party.java_src.error_prone.project.annotations.Google_internal")
os.remove("src/main/java/com/google/errorprone/annotations")
os.remove("src/main/java/com/google/errorprone/annotations")
os.remove("src/main/java/com/google/errorprone/annotations/concurrent")
os.remove("third_party.java_src.error_prone.project.annotations.Google_internal")
os.remove("src/main/java/com/google/errorprone/annotations")
os.remove("src/main/java/com/google/errorprone/annotations")
os.remove("src/main/java/com/google/errorprone/annotations/concurrent")
os.remove("third_party.java_src.error_prone.project.annotations.Google_internal")
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.setVisible(false)
gg.searchNumber("196864;16842753::5", gg.TYPE_DWORD, false, gg.SGN_EQUAL, 0, -1)
if gg.getResultCount() == 0 then
else
gg.setVisible(false)
gg.searchNumber("196864", gg.TYPE_DWORD, false, gg.SGN_EQUAL, 0, -1)
resultsCount = gg.getResultCount()
results = gg.getResults(resultsCount)
for x = 1, resultsCount do

gg.addListItems({
[1] = {
address = results[x].address + 376,
flags = 4,
freeze = true,
value = 402690104
}
})
end
end
gg.clearResults()                                               
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("131330;133634", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("131330", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)

jg = gg.getResults(1000)
sl = gg.getResultCount()
if 1000 < sl then
  sl = 1000
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("131568", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)

jg = gg.getResults(1000)
sl = gg.getResultCount()
if 1000 < sl then
  sl = 1000
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("131842", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)

jg = gg.getResults(1000)
sl = gg.getResultCount()
if 1000 < sl then
  sl = 1000
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("131970", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)

jg = gg.getResults(1000)
sl = gg.getResultCount()
if 1000 < sl then
  sl = 1000
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("132610", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)

jg = gg.getResults(1000)
sl = gg.getResultCount()
if 1000 < sl then
  sl = 1000
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("132866", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)

jg = gg.getResults(1000)
sl = gg.getResultCount()
if 1000 < sl then
  sl = 1000
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)

jg = gg.getResults(1000)
sl = gg.getResultCount()
if 1000 < sl then
  sl = 1000
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("133506", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)

jg = gg.getResults(1000)
sl = gg.getResultCount()
if 1000 < sl then
  sl = 1000
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("133634", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)

jg = gg.getResults(1000)
sl = gg.getResultCount()
if 1000 < sl then
  sl = 1000
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("133890", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)

jg = gg.getResults(1000)
sl = gg.getResultCount()
if 1000 < sl then
  sl = 1000
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("1023;1024;1028", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)

jg = gg.getResults(1000)
sl = gg.getResultCount()
if 1000 < sl then
  sl = 1000
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.setVisible(false)
gg.searchNumber("160;162;167;187;12289;1", gg.TYPE_DWORD, false, gg.SGN_EQUAL, 0, -1)
if gg.getResultCount() == 0 then
else
gg.setVisible(false)
gg.searchNumber("1", gg.TYPE_DWORD, false, gg.SGN_EQUAL, 0, -1)
resultsCount = gg.getResultCount()
results = gg.getResults(resultsCount)
for x = 1, resultsCount do

gg.addListItems({
[1] = {
address = results[x].address + 0,
flags = 4,
freeze = true,
value = 0
}
})
end
end
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("131586", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)

jg = gg.getResults(1000)
sl = gg.getResultCount()
if 1000 < sl then
  sl = 1000
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.clearResults()
gg.setVisible(false)
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)

revert = gg.getResults(10000, nil, nil, nil, nil, nil, nil, nil, nil)
local t = gg.getResults(10000, nil, nil, nil, nil, nil, nil, nil, nil)
for i, v in ipairs(t) do
	if v.flags == gg.TYPE_DWORD then
		v.value = "0"
		v.freeze = true
	end
gg.clearResults()
gg.setVisible(false)
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("135682;144387", gg.TYPE_DWORD)
gg.refineNumber("135682", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("134658;131586", gg.TYPE_DWORD)
gg.refineNumber("134658", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("4096;135682", gg.TYPE_DWORD)
gg.refineNumber("4096", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("134914;262403", gg.TYPE_DWORD)
gg.refineNumber("134914", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("133378;262403", gg.TYPE_DWORD)
gg.refineNumber("133378", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("131330;133634", gg.TYPE_DWORD)
gg.refineNumber("131330", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("131842;132098", gg.TYPE_DWORD)
gg.refineNumber("131842", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("133376", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
  os.remove("/mnt/shell/0/emulated/Android/data/com.pubg.krmobile/cache/GCloud.ini")
  os.remove("/mnt/shell/0/emulated/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
  os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/cache/GCloud.ini")
  os.remove("/sdcard/Android/data/com.pubg.krmobile/cache/GCloud.ini")
  os.remove("/sdcard/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
  os.remove("/mnt/shell/0/emulated/Android/data/com.tencent.tmgp.pubgmhd/cache/GCloud.ini")
  os.remove("/mnt/shell/0/emulated/Android/data/com.tencent.tmgp.pubgmhd/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
  os.remove("/storage/emulated/0/Android/data/com.tencent.tmgp.pubgmhd/cache/GCloud.ini")
  os.remove("/sdcard/Android/data/com.tencent.tmgp.pubgmhd/cache/GCloud.ini")
  os.remove("/sdcard/Android/data/com.tencent.tmgp.pubgmhd/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
  os.remove("/mnt/shell/0/emulated/Android/data/com.vng.pubgmobile/cache/GCloud.ini")
  os.remove("/mnt/shell/0/emulated/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
  os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/cache/GCloud.ini")
  os.remove("/sdcard/Android/data/com.vng.pubgmobile/cache/GCloud.ini")
  os.remove("/sdcard/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
  os.remove("/mnt/shell/0/emulated/Android/data/com.tencent.ig/cache/GCloud.ini")
  os.remove("/mnt/shell/0/emulated/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
  os.remove("/storage/emulated/0/Android/data/com.tencent.ig/cache/GCloud.ini")
  os.remove("/sdcard/Android/data/com.tencent.ig/cache/GCloud.ini")
  os.remove("/sdcard/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
  os.remove("/mnt/shell/0/emulated/Android/data/com.tencent.igce/cache/GCloud.ini")
  os.remove("/mnt/shell/0/emulated/Android/data/com.tencent.igce/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
  os.remove("/storage/emulated/0/Android/data/com.tencent.igce/cache/GCloud.ini")
  os.remove("/sdcard/Android/data/com.tencent.igce/cache/GCloud.ini")
  os.remove("/sdcard/Android/data/com.tencent.igce/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
  os.remove("/mnt/shell/0/emulated/Android/data/com.tencent.iglite/cache/GCloud.ini")
  os.remove("/mnt/shell/0/emulated/Android/data/com.tencent.iglite/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
  os.remove("/storage/emulated/0/Android/data/com.tencent.iglite/cache/GCloud.ini")
  os.remove("/sdcard/Android/data/com.tencent.iglite/cache/GCloud.ini")
  os.remove("/sdcard/Android/data/com.tencent.iglite/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
  gg.clearResults()
  print("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÄ‚ñà‚ñÑ")
print("‚îÄ‚îÄ‚îÄ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ")
print("‚îÄ‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà")
print("‚îÄ ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà.‚ñº.‚ñº.‚ñº.‚ñº.‚ñº.‚ñº‚ñº‚ñº‚ñº‚ñº‚ñº")
print("‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚™º·ó©·ëéTI·ó∑·ó©·ëé ·ó©KTI·ñ¥")
print("‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚™º‚û£üáπüá∑")
print("‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚™ºƒ∞nstagram Yok")
print("‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚™º‚û£Youtube Yok")
print(" ‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚™º ‚û£Script Bypass Vipüå≤")
print("‚îÄ‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ.‚ñ≤.‚ñ≤‚ñ≤‚ñ≤‚ñ≤‚ñ≤‚ñ≤‚ñ≤‚ñ≤‚ñ≤‚ñ≤")
print("‚îÄ‚îÄ ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÄ‚ñÄ]]")
end
      end -- Decrypt CVaRy

function Party()
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber(":third_party", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("1668444975;1767992623:5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
revert = gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
end -- Decrypt CVaRy

function LogSil()
  os.remove("/storage/emulated/0/tencent")
  os.remove("/storage/emulated/0/MidasOverse")
  os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/tbslog")
  os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/login-identifier.txt")
  os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/cacheFile.txt")
  os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/vmpcloudconfig.json")
  os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
  os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/GameErrorNoRecords")
  os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/AntiCheat.ini")
  os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/IGH5CachePluginConfig.ini")
  os.remove("/storage/emulated/0/Android/data/com.tencent.ig/cache")
  os.remove("/storage/emulated/0/tencent")
  os.remove("/storage/emulated/0/MidasOverse")
  os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/tbslog")
  os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/login-identifier.txt")
  os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/cacheFile.txt")
  os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/vmpcloudconfig.json")
  os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
  os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/GameErrorNoRecords")
  os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/AntiCheat.ini")
  os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/IGH5CachePluginConfig.ini")
  os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/cache")
  os.remove("/storage/emulated/0/tencent")
  os.remove("/storage/emulated/0/MidasOverse")
  os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/tbslog")
  os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/login-identifier.txt")
  os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/cacheFile.txt")
  os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/vmpcloudconfig.json")
  os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Logs")
  os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/GameErrorNoRecords")
  os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/AntiCheat.ini")
  os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Config/Android/IGH5CachePluginConfig.ini")
  os.remove("/storage/emulated/0/Android/data/com.vng.pubgmobile/cache")
  gg.toast("Clear Log")
end -- Decrypt CVaRy

function WALLHACK()
UN = gg.choice({
	"üìÇ ’è·ëé·ó©·ë≠·ó™·ñá·ó©·òúO·ëé",
	"üìÇ ·ó∞·ó¥·ó™I·ó©T·ó¥K ·ó¥·ô≠Y·ëéO’è KI·ñáI·ëé",
	"·òú·ó¥·ñáI",
}, nil, "·óØ·ó©·í™·ïº·ó©·ëïK ·ó∞·ó¥·ëé·ëå")
if UN == nil then 
else
if UN == 1 then WH()end -- Decrypt CVaRy
if UN == 2 then WH2()end -- Decrypt CVaRy
if UN == 3 then HOME()end -- Decrypt CVaRy
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy

function WH()
LBMENU = gg.multiChoice({
"[üß±] Wall Hack SD ALL ‚ïö¬ª Color",
"[üß±] Wall Hack SD 625 ‚ïö¬ª Color",
"[üß±] Wall Hack SD 636 ‚ïö¬ª Color",
"[üß±] Wall Hack SD 660 ‚ïö¬ª Color",
"[üß±] Wall Hack SD 665 ‚ïö¬ª Color",
"[üß±] Wall Hack SD 675 ‚ïö¬ª Color",
"[üß±] Wall Hack SD 710 ‚ïö¬ª Color",
"[üß±] Wall Hack SD 712 ‚ïö¬ª Color",
"[üß±] Wall Hack SD 720 ‚ïö¬ª Color",
"[üß±] Wall Hack SD 820 ‚ïö¬ª Color",
"[üß±] Wall Hack SD 835 ‚ïö¬ª Color",
"[üß±] Wall Hack SD 845 ‚ïö¬ª Color",
"[üß±] Wall Hack SD 855 ‚ïö¬ª Color",
"üÖ∂Ô∏éüÖ¥Ô∏éüÜÅÔ∏éüÖ∏Ô∏é"}, nil, "’è·ëé·ó©·ë≠·ó™·ñá·ó©·òúO·ëé ·ó∞·ó¥·ëé·ëå")
if LBMENU == nil then
else
if LBMENU[1] == true then
MGALL()
end -- Decrypt CVaRy
if LBMENU[2] == true then
MG1()
end -- Decrypt CVaRy
if LBMENU[3] == true then
MG2()
end -- Decrypt CVaRy
if LBMENU[4] == true then
MG3()
end -- Decrypt CVaRy
if LBMENU[5] == true then
MG4()
end -- Decrypt CVaRy
if LBMENU[6] == true then
MG5()
end -- Decrypt CVaRy
if LBMENU[7] == true then
MG6()
end -- Decrypt CVaRy
if LBMENU[8] == true then
MG7()
end -- Decrypt CVaRy
if LBMENU[9] == true then
MG8()
end -- Decrypt CVaRy
if LBMENU[10] == true then
MG9()
end -- Decrypt CVaRy
if LBMENU[11] == true then
MG10()
end -- Decrypt CVaRy
if LBMENU[12] == true then
MG11()
end -- Decrypt CVaRy
if LBMENU[13] == true then
MG12()
end -- Decrypt CVaRy
if LBMENU[14] == true then
HOME()
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy
end -- Decrypt CVaRy

function MGALL()
ALD = gg.multiChoice({
"[üß±] Wall Hack All Color ‚ïö¬ª Low",
"[üß±] Wall Hack All Color‚ïö¬ª Medium",
"[üß±] Wall Hack All Color ‚ïö¬ª High",
"[üß±] Green Body ‚ïö¬ª Color",
"[üß±] Red Body ‚ïö¬ª Color",
"[üß±] Yellow Body ‚ïö¬ª Color",
"·òú·ó¥·ñáI"}, nil, "·ñá·ó¥·ëéK ·ó∞·ó¥·ëé·ëå")
if ALD == nil then
else
if ALD[1] == true then
ALD1()
end -- Decrypt CVaRy
if ALD[2] == true then
ALD2()
end -- Decrypt CVaRy
if ALD[3] == true then
ALD3()
end -- Decrypt CVaRy
if ALD[4] == true then
ALD4()
end -- Decrypt CVaRy
if ALD[5] == true then
ALD5()
end -- Decrypt CVaRy
if ALD[6] == true then
ALD6()
end -- Decrypt CVaRy
if ALD[7] == true then
HOME()
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy
end -- Decrypt CVaRy

function ALD1()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("2;1.8947657e-40;5.8013756e-42", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2.718519e-43;3.7615819e-37;2;-1;1;-127", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("0B0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Whall Hack Low")
end -- Decrypt CVaRy

function ALD2()
gg.clearResults()
if gg.REGION_VIDEO == nil then
VB = gg.REGION_BAD
else
VB = gg.REGION_VIDEO
end -- Decrypt CVaRy
gg.setRanges(VB)
gg.searchNumber("-2147086191", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("4C8", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
gg.editAll("1168777216", gg.TYPE_DWORD)
gg.clearResults()
if gg.REGION_VIDEO == nil then
VB = gg.REGION_BAD
else
VB = gg.REGION_VIDEO
end -- Decrypt CVaRy
gg.setRanges(VB)
gg.searchNumber("-2145644352", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("7E0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
gg.editAll("1168777216", gg.TYPE_DWORD)
gg.clearResults()
if gg.REGION_VIDEO == nil then
VB = gg.REGION_BAD
else
VB = gg.REGION_VIDEO
end -- Decrypt CVaRy
gg.setRanges(VB)
gg.searchNumber("7,41529732e-29", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
if gg.REGION_VIDEO == nil then
VB = gg.REGION_BAD
else
VB = gg.REGION_VIDEO
end -- Decrypt CVaRy
gg.setRanges(VB)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("0B0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Whall Hack Medium")
end -- Decrypt CVaRy

function ALD3()
gg.clearResults()
if gg.REGION_VIDEO == nil then
VB = gg.REGION_BAD
else
VB = gg.REGION_VIDEO
end -- Decrypt CVaRy
gg.setRanges(VB)
gg.searchNumber("-2145644340", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("7E0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
gg.editAll("1168777216", gg.TYPE_DWORD)
gg.clearResults()
if gg.REGION_VIDEO == nil then
VB = gg.REGION_BAD
else
VB = gg.REGION_VIDEO
end -- Decrypt CVaRy
gg.setRanges(VB)
gg.searchNumber("-2147483636", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("4F8", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
gg.editAll("1168777216", gg.TYPE_DWORD)
gg.clearResults()
if gg.REGION_VIDEO == nil then
VB = gg.REGION_BAD
else
VB = gg.REGION_VIDEO
end -- Decrypt CVaRy
gg.setRanges(VB)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("0B8", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
gg.editAll("8199", gg.TYPE_DWORD)
gg.clearResults()
if gg.REGION_VIDEO == nil then
VB = gg.REGION_BAD
else
VB = gg.REGION_VIDEO
end -- Decrypt CVaRy
gg.setRanges(VB)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("120", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
gg.editAll("8199", gg.TYPE_DWORD)
gg.clearResults()
if gg.REGION_VIDEO == nil then
VB = gg.REGION_BAD
else
VB = gg.REGION_VIDEO
end -- Decrypt CVaRy
gg.setRanges(VB)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("128", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
gg.editAll("8200", gg.TYPE_DWORD)
gg.clearResults()
if gg.REGION_VIDEO == nil then
VB = gg.REGION_BAD
else
VB = gg.REGION_VIDEO
end -- Decrypt CVaRy
gg.setRanges(VB)
gg.searchNumber("1 078 984 714", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
KARARWALL3 = gg.getResults(100)
gg.editAll("-1", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Whall Hack High")
end -- Decrypt CVaRy

function ALD4()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("1077937166;1661534257;-2134900736:2769", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("1077937166;1661534257;-2134900736:2769", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(2805)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8200;1194380088;289673539:9", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(2805)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Green Color")
end -- Decrypt CVaRy

function ALD5()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8,196D;8,192D;8,200D::", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("7", 4)
gg.clearResults()
gg.toast("Red Color")
end -- Decrypt CVaRy

function ALD6()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Yellow Color")
end -- Decrypt CVaRy

function MG1()
SD625 = gg.multiChoice({
"[üß±] Wall Hack SD 625 ‚ïö¬ª White",
"[üß±] Wall Hack SD 625 ‚ïö¬ª Red",
"[üß±] Wall Hack SD 625 ‚ïö¬ª Yellow",
"·òú·ó¥·ñáI"}, nil, "")
if SD625 == nil then
else
if SD625[1] == true then
SD6()
end -- Decrypt CVaRy
if SD625[2] == true then
SD7()
end -- Decrypt CVaRy
if SD625[3] == true then
SD8()
end -- Decrypt CVaRy
if SD625[4] == true then
HOME()
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy
end -- Decrypt CVaRy

function SD6()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("135,215D;4,140D;3.7615819e-37;2::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(10)
--[[ count: 10 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("194D;3.7615819e-37;2;-1;1;-127::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(10)
--[[ count: 10 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 625")
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8,200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 9 ]]
gg.refineNumber("8,200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 9 ]]
gg.refineAddress("0B0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.refineNumber("8,200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.getResults(1401)
--[[ count: 0 ]]
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Renk SD 625 Ye≈üil")
end -- Decrypt CVaRy

function SD7()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("135,215D;4,140D;3.7615819e-37;2::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(10)
--[[ count: 10 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("194D;3.7615819e-37;2;-1;1;-127::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(10)
--[[ count: 10 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 625")
gg.clearResults()
gg.searchNumber("8,196D;8,192D;8,200D::", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 9 ]]
gg.getResults(10)
--[[ count: 9 ]]
gg.editAll("7", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Renk SD 625 Kirmizi")
end -- Decrypt CVaRy

function SD8()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("135,215D;4,140D;3.7615819e-37;2::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(10)
--[[ count: 10 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("194D;3.7615819e-37;2;-1;1;-127::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(10)
--[[ count: 10 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 625")
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("256D;8,200D;13D", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.getResultsCount()
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 9 ]]
gg.getResults(20)
--[[ count: 9 ]]
gg.editAll("8198", gg.TYPE_DWORD)
gg.toast("Renk SD 625 Sarƒ±")
end -- Decrypt CVaRy

function MG2()
SD636 = gg.multiChoice({
"[üß±] Wall Hack SD 636 ‚ïö¬ª White",
"[üß±] Wall Hack SD 636 ‚ïö¬ª Red",
"[üß±] Wall Hack SD 636 ‚ïö¬ª Yellow",
"üÖ∂Ô∏éüÖ¥Ô∏éüÜÅÔ∏éüÖ∏Ô∏é"}, nil, "")
if SD636 == nil then
else
if SD636[1] == true then
SD9()
end -- Decrypt CVaRy
if SD636[2] == true then
SD10()
end -- Decrypt CVaRy
if SD636[3] == true then
SD11()
end -- Decrypt CVaRy
if SD636[4] == true then
HOME()
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy
end -- Decrypt CVaRy

function SD9()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("5.8013756e-42F;-5.5695588e-40F;2.0F::100", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("2.718519e-43F;3.7615819e-37F;2.0F;-1.0F;-127.0F::520", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("Wallhack SD 636")
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8,196D;8,192D;8,200D::", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("5", 4)
gg.clearResults()
gg.toast("Color SD 636 White")
end -- Decrypt CVaRy

function SD10()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("5.8013756e-42F;-5.5695588e-40F;2.0F::100", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("2.718519e-43F;3.7615819e-37F;2.0F;-1.0F;-127.0F::520", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("Wallhack SD 636")
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8,196D;8,192D;8,200D::", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("7", 4)
gg.clearResults()
gg.toast("Color SD 636 Red")
end -- Decrypt CVaRy

function SD11()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("5.8013756e-42F;-5.5695588e-40F;2.0F::100", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("2.718519e-43F;3.7615819e-37F;2.0F;-1.0F;-127.0F::520", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("Wallhack SD 636")
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8,196D;8,192D;8,200D::", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("6", 4)
gg.clearResults()
gg.toast("Color SD 636 Yellow")
end -- Decrypt CVaRy

function MG3()
SD660 = gg.multiChoice({
"[üß±] Wall Hack SD 660 ‚ïö¬ª Green",
"[üß±] Wall Hack SD 660 ‚ïö¬ª Red",
"[üß±] Wall Hack SD 660 ‚ïö¬ª Yellow",
"üÖ∂Ô∏éüÖ¥Ô∏éüÜÅÔ∏éüÖ∏Ô∏é"}, nil, "")
if SD660 == nil then
else
if SD660[1] == true then
SD12()
end -- Decrypt CVaRy
if SD660[2] == true then
SD13()
end -- Decrypt CVaRy
if SD660[3] == true then
SD14()
end -- Decrypt CVaRy
if SD660[4] == true then
HOME()
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy
end -- Decrypt CVaRy

function SD12()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("2.718519e-43F;3.7615819e-37F;2.0F;-1.0F;1.0F;-127.0F;0.00999999978F::200", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber(2, gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(30)
--[[ count: 30 ]]
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("5.8013756e-42F;-5.5695588e-40F;2.0F::100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber(2, gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(30)
--[[ count: 30 ]]
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 660")
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8,200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 9 ]]
gg.refineNumber("8,200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 9 ]]
gg.refineAddress("0B0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.refineNumber("8,200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.getResults(1401)
--[[ count: 0 ]]
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Renk SD 660 Ye≈üil")
end -- Decrypt CVaRy

function SD13()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("2.718519e-43F;3.7615819e-37F;2.0F;-1.0F;1.0F;-127.0F;0.00999999978F::200", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber(2, gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(30)
--[[ count: 30 ]]
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("5.8013756e-42F;-5.5695588e-40F;2.0F::100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber(2, gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(30)
--[[ count: 30 ]]
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 660")
gg.clearResults()
gg.searchNumber("8,196D;8,192D;8,200D::", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 9 ]]
gg.getResults(10)
--[[ count: 9 ]]
gg.editAll("7", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Renk SD 660 Kirmizi")
end -- Decrypt CVaRy

function SD14()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("2.718519e-43F;3.7615819e-37F;2.0F;-1.0F;1.0F;-127.0F;0.00999999978F::200", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber(2, gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(30)
--[[ count: 30 ]]
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("5.8013756e-42F;-5.5695588e-40F;2.0F::100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber(2, gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(30)
--[[ count: 30 ]]
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 660")
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("256D;8,200D;13D", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.getResultsCount()
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 9 ]]
gg.getResults(20)
--[[ count: 9 ]]
gg.editAll("8198", gg.TYPE_DWORD)
gg.toast("Renk SD 660 Sarƒ±")
end -- Decrypt CVaRy

function MG4()
SD665 = gg.multiChoice({
"[üß±] Wall Hack SD 665 ‚ïö¬ª Green",
"[üß±] Wall Hack SD 665 ‚ïö¬ª Red",
"[üß±] Wall Hack SD 665 ‚ïö¬ª Yellow",
"üÖ∂Ô∏éüÖ¥Ô∏éüÜÅÔ∏éüÖ∏Ô∏é"}, nil, "")
if SD665 == nil then
else
if SD665[1] == true then
SD15()
end -- Decrypt CVaRy
if SD665[2] == true then
SD16()
end -- Decrypt CVaRy
if SD665[3] == true then
SD17()
end -- Decrypt CVaRy
if SD665[6] == true then
HOME()
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy
end -- Decrypt CVaRy

function SD15()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(6)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("5.201992e21;2.25000452995;2;1.6623054e-19", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(4)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 845")
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 665 Green")
end -- Decrypt CVaRy

function SD16()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("6.03209094e21", 16, false, 536870912, 0, -1)
gg.getResults(6281913639784)
gg.editAll("0", 16)
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("-2.57741948e-39", 16, false, 536870912, 0, -1)
gg.getResults(6281913639784)
gg.editAll("0", 16)
gg.clearResults()
gg.toast("Wallhack SD 665")
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("5", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 665 Red")
end -- Decrypt CVaRy

function SD17()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("6.03209094e21", 16, false, 536870912, 0, -1)
gg.getResults(6281913639784)
gg.editAll("0", 16)
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("-2.57741948e-39", 16, false, 536870912, 0, -1)
gg.getResults(6281913639784)
gg.editAll("0", 16)
gg.clearResults()
gg.toast("Wallhack SD 665")
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 665 Yellow")
end -- Decrypt CVaRy

function MG5()
SD675 = gg.multiChoice({
"[üß±] Wall Hack SD 675 ‚ïö¬ª Green",
"[üß±] Wall Hack SD 675 ‚ïö¬ª Red",
"[üß±] Wall Hack SD 675 ‚ïö¬ª Yellow",
"üÖ∂Ô∏éüÖ¥Ô∏éüÜÅÔ∏éüÖ∏Ô∏é"}, nil, "")
if SD675 == nil then
else
if SD675[1] == true then
SD18()
end -- Decrypt CVaRy
if SD675[2] == true then
SD19()
end -- Decrypt CVaRy
if SD675[3] == true then
SD20()
end -- Decrypt CVaRy
if SD675[4] == true then
HOME()
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy
end -- Decrypt CVaRy

function SD18()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(6)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("5.201992e21;2.25000452995;2;1.6623054e-19", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(4)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 845")
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 675 Green")
end -- Decrypt CVaRy

function SD19()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("-2¬†145¬†644¬†340", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("7E0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
gg.editAll("1 168 777 216", gg.TYPE_DWORD)
gg.clearResults()
gg.searchNumber("-2¬†147¬†483¬†636", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("4F8", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
gg.editAll("1 168 777 216", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Wallhack SD 675")
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("0B0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
gg.editAll("5", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 675 Red")
end -- Decrypt CVaRy

function SD20()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("-2¬†145¬†644¬†340", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("7E0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
gg.editAll("1 168 777 216", gg.TYPE_DWORD)
gg.clearResults()
gg.searchNumber("-2¬†147¬†483¬†636", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("4F8", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
gg.editAll("1 168 777 216", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Wallhack SD 675")
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("0B0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 675 Yellow")
end -- Decrypt CVaRy

function MG6()
SD710 = gg.multiChoice({
"[üß±] Wall Hack SD 710 ‚ïö¬ª Green",
"[üß±] Wall Hack SD 710 ‚ïö¬ª Red",
"[üß±] Wall Hack SD 710 ‚ïö¬ª Yellow",
"üÖ∂Ô∏éüÖ¥Ô∏éüÜÅÔ∏éüÖ∏Ô∏é"}, nil, "")
if SD710 == nil then
else
if SD710[1] == true then
SD21()
end -- Decrypt CVaRy
if SD710[2] == true then
SD22()
end -- Decrypt CVaRy
if SD710[3] == true then
SD23()
end -- Decrypt CVaRy
if SD710[4] == true then
HOME()
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy
end -- Decrypt CVaRy

function SD21()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("274,677,779D;2.25000452995;2;1.6623054e-19", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(20)
--[[ count: 20 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("218D;3.7615819e-37;2;-1;1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(10)
--[[ count: 10 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(15)
--[[ count: 15 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("206D;3.7615819e-37;2;-1;1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(10)
--[[ count: 10 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.toast("Wallhack SD 710")
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8,200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.refineNumber("8,200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.refineAddress("0B0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.refineNumber("8,200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.getResults(1401)
--[[ count: 0 ]]
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Renk SD 710 Ye≈üil")
end -- Decrypt CVaRy

function SD22()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("274,677,779D;2.25000452995;2;1.6623054e-19", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(20)
--[[ count: 20 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("218D;3.7615819e-37;2;-1;1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(10)
--[[ count: 10 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(15)
--[[ count: 15 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("206D;3.7615819e-37;2;-1;1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(10)
--[[ count: 10 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.toast("Wallhack SD 710")
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.clearResults()
gg.searchNumber("8,196D;8,192D;8,200D::", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 9 ]]
gg.getResults(10)
--[[ count: 9 ]]
gg.editAll("7", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Renk SD 710 Kirmizi")
end -- Decrypt CVaRy

function SD23()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("274,677,779D;2.25000452995;2;1.6623054e-19", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(20)
--[[ count: 20 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("218D;3.7615819e-37;2;-1;1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(10)
--[[ count: 10 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(15)
--[[ count: 15 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("206D;3.7615819e-37;2;-1;1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 161 ]]
gg.getResults(10)
--[[ count: 10 ]]
gg.editAll("130", gg.TYPE_FLOAT)
gg.toast("Wallhack SD 710")
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("256D;8,200D;13D", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.getResultsCount()
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 9 ]]
gg.getResults(20)
--[[ count: 9 ]]
gg.editAll("8198", gg.TYPE_DWORD)
gg.toast("Renk SD 710 Sarƒ±")
end -- Decrypt CVaRy

function MG7()
SD712 = gg.multiChoice({
"[üß±] Wall Hack SD 712 ‚ïö¬ª Green",
"[üß±] Wall Hack SD 712 ‚ïö¬ª Red",
"[üß±] Wall Hack SD 712 ‚ïö¬ª Yellow",
"üÖ∂Ô∏éüÖ¥Ô∏éüÜÅÔ∏éüÖ∏Ô∏é"}, nil, "")
if SD712 == nil then
else
if SD712[1] == true then
SD24()
end -- Decrypt CVaRy
if SD712[2] == true then
SD25()
end -- Decrypt CVaRy
if SD712[3] == true then
SD26()
end -- Decrypt CVaRy
if SD712[4] == true then
HOME()
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy
end -- Decrypt CVaRy

function SD24()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(6)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("5.201992e21;2.25000452995;2;1.6623054e-19", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(4)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 845")
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 712 Green")
end -- Decrypt CVaRy

function SD25()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(999)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(999)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("Wallhack SD 712")
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("5", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 712 Red")
end -- Decrypt CVaRy

function SD26()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(999)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(999)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("Wallhack SD 712")
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 712 Yellow")
end -- Decrypt CVaRy

function MG8()
SD845 = gg.multiChoice({
"[üß±] Wall Hack SD 720 ‚ïö¬ª Green",
"[üß±] Wall Hack SD 720 ‚ïö¬ª Red",
"[üß±] Wall Hack SD 720 ‚ïö¬ª Yellow",
"üÖ∂Ô∏éüÖ¥Ô∏éüÜÅÔ∏éüÖ∏Ô∏é"}, nil, "")
if SD720 == nil then
else
if SD720[1] == true then
SD27()
end -- Decrypt CVaRy
if SD720[2] == true then
SD28()
end -- Decrypt CVaRy
if SD720[3] == true then
SD29()
end -- Decrypt CVaRy
if SD720[4] == true then
HOME()
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy
end -- Decrypt CVaRy

function SD27()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(6)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("5.201992e21;2.25000452995;2;1.6623054e-19", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(4)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 845")
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 720 Green")
end -- Decrypt CVaRy

function SD28()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(6)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("5.201992e21;2.25000452995;2;1.6623054e-19", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(4)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 720")
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("5", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 720 Red")
end -- Decrypt CVaRy

function SD29()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(6)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("5.201992e21;2.25000452995;2;1.6623054e-19", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(4)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 720")
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 720 Yellow")
end -- Decrypt CVaRy

function MG9()
SD820 = gg.multiChoice({
"[üß±] Wall Hack ‚ïö¬ª Green",
"[üß±] Wall Hack ‚ïö¬ª Red",
"[üß±] Wall Hack ‚ïö¬ª Yellow",
"üÖ∂Ô∏éüÖ¥Ô∏éüÜÅÔ∏éüÖ∏Ô∏é"}, nil, "")
if SD820 == nil then
else
if SD820[1] == true then
SD30()
end -- Decrypt CVaRy
if SD820[2] == true then
SD31()
end -- Decrypt CVaRy
if SD820[3] == true then
SD32()
end -- Decrypt CVaRy
if SD820[4] == true then
HOME()
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy
end -- Decrypt CVaRy

function SD30()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(6)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("5.201992e21;2.25000452995;2;1.6623054e-19", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(4)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 845")
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("7", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 820 Green")
end -- Decrypt CVaRy

function SD31()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("2;1.8947657e-40;5.8013756e-42", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2.718519e-43;3.7615819e-37;2;-1;1;-127", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("Wallhack SD 820")
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("5", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 820 Red")
end -- Decrypt CVaRy

function SD32()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("2;1.8947657e-40;5.8013756e-42", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2.718519e-43;3.7615819e-37;2;-1;1;-127", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(10)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("Wallhack SD 820")
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 820 Yellow")
end -- Decrypt CVaRy

function MG10()
SD835 = gg.multiChoice({
"[üß±] Wall Hack SD 835 ‚ïö¬ª Green",
"[üß±] Wall Hack SD 835 ‚ïö¬ª Red",
"[üß±] Wall Hack SD 835 ‚ïö¬ª Yellow",
"üÖ∂Ô∏éüÖ¥Ô∏éüÜÅÔ∏éüÖ∏Ô∏é"}, nil, "")
if SD835 == nil then
else
if SD835[1] == true then
SD33()
end -- Decrypt CVaRy
if SD835[2] == true then
SD34()
end -- Decrypt CVaRy
if SD835[3] == true then
SD35()
end -- Decrypt CVaRy
if SD835[4] == true then
HOME()
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy
end -- Decrypt CVaRy

function SD33()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(6)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("5.201992e21;2.25000452995;2;1.6623054e-19", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(4)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 845")
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("7", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 835 Green")
end -- Decrypt CVaRy

function SD34()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("2.718519e-43F;3.7615819e-37F;2.0F;0.00999999978F::200", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("5.8013756e-42F;-5.5695588e-40F;2.0F::100", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("7.1746481e-43;1.0842022e-19;94.015625;7.0776718e-15;2::", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(5)
gg.editAll("9999", 16)
gg.toast("Wallhack SD 835")
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("5", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 835 Red")
end -- Decrypt CVaRy

function SD35()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("2.718519e-43F;3.7615819e-37F;2.0F;0.00999999978F::200", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("5.8013756e-42F;-5.5695588e-40F;2.0F::100", 16, false, 536870912, 0, -1)
gg.searchNumber(2, 16, false, 536870912, 0, -1)
gg.getResults(30)
gg.editAll("120", 16)
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("7.1746481e-43;1.0842022e-19;94.015625;7.0776718e-15;2::", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(5)
gg.editAll("9999", 16)
gg.toast("Wallhack SD 835")
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 835 Yellow")
end -- Decrypt CVaRy

function MG11()
SD845 = gg.multiChoice({
"[üß±] Wall Hack SD 845 ‚ïö¬ª Green",
"[üß±] Wall Hack SD 845 ‚ïö¬ª Red",
"[üß±] Wall Hack SD 845 ‚ïö¬ª Yellow",
"üÖ∂Ô∏éüÖ¥Ô∏éüÜÅÔ∏éüÖ∏Ô∏é"}, nil, "")
if SD845 == nil then
else
if SD845[1] == true then
SD36()
end -- Decrypt CVaRy
if SD845[2] == true then
SD37()
end -- Decrypt CVaRy
if SD845[3] == true then
SD38()
end -- Decrypt CVaRy
if SD845[4] == true then
HOME()
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy
end -- Decrypt CVaRy

function SD36()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(6)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("5.201992e21;2.25000452995;2;1.6623054e-19", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(4)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 845")
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 845 Green")
end -- Decrypt CVaRy

function SD37()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(6)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("5.201992e21;2.25000452995;2;1.6623054e-19", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(4)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 845")
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("7", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 845 Red")
end -- Decrypt CVaRy

function SD38()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(6)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("5.201992e21;2.25000452995;2;1.6623054e-19", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(4)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 845")
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(15)
gg.editAll("6", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Color SD 845 Yellow")
end -- Decrypt CVaRy

function MG12()
SD855 = gg.multiChoice({
"[üß±] Wall Hack SD 855 ‚ïö¬ª Red",
"[üß±] Wall Hack SD 855 ‚ïö¬ª White",
"[üß±] Wall Hack SD 855 ‚ïö¬ª Yellow",
"üÖ∂Ô∏éüÖ¥Ô∏éüÜÅÔ∏éüÖ∏Ô∏é"}, nil, "")
if SD855 == nil then
else
if SD855[1] == true then
SD39()
end -- Decrypt CVaRy
if SD855[2] == true then
SD40()
end -- Decrypt CVaRy
if SD855[3] == true then
SD41()
end -- Decrypt CVaRy
if SD855[4] == true then
HOME()
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy
end -- Decrypt CVaRy

function SD39()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", gg.TYPE_FLOAT)
--[[ found: 0 ]]
gg.refineNumber("2", gg.TYPE_FLOAT)
--[[ found: 0 ]]
gg.getResults(100)
--[[ count: 0 ]]
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", gg.TYPE_FLOAT)
--[[ found: 0 ]]
gg.refineNumber("2", gg.TYPE_FLOAT)
--[[ found: 0 ]]
gg.getResults(100)
--[[ count: 0 ]]
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 855")
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 9 ]]
gg.refineAddress("328", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
--[[ count: 0 ]]
gg.editAll("6", gg.TYPE_DWORD)
gg.toast("Renk SD 855 Kirmizi")
end -- Decrypt CVaRy

function SD40()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", gg.TYPE_FLOAT)
--[[ found: 0 ]]
gg.refineNumber("2", gg.TYPE_FLOAT)
--[[ found: 0 ]]
gg.getResults(100)
--[[ count: 0 ]]
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", gg.TYPE_FLOAT)
--[[ found: 0 ]]
gg.refineNumber("2", gg.TYPE_FLOAT)
--[[ found: 0 ]]
gg.getResults(100)
--[[ count: 0 ]]
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 855")
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 1 ]]
gg.refineAddress("0A0")
--[[ found: 0 ]]
gg.getResults(10)
--[[ count: 0 ]]
gg.editAll("8197", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Renk SD 855 Beyaz")
end -- Decrypt CVaRy

function SD41()
gg.clearResults()
gg.setVisible(false)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", gg.TYPE_FLOAT)
--[[ found: 0 ]]
gg.refineNumber("2", gg.TYPE_FLOAT)
--[[ found: 0 ]]
gg.getResults(100)
--[[ count: 0 ]]
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", gg.TYPE_FLOAT)
--[[ found: 0 ]]
gg.refineNumber("2", gg.TYPE_FLOAT)
--[[ found: 0 ]]
gg.getResults(100)
--[[ count: 0 ]]
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack SD 855")
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 9 ]]
gg.refineAddress("2A0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
--[[ count: 0 ]]
gg.editAll("1", gg.TYPE_DWORD)
gg.clearResults()
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 1 ]]
gg.refineAddress("2A8", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
--[[ count: 0 ]]
gg.editAll("1", gg.TYPE_DWORD)
gg.toast("Renk SD 855 Sarƒ±")
end -- Decrypt CVaRy

function WH2()
XYZFAN9 = gg.multiChoice({
     ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack All Device',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack Fix Blink',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack Fix Scope',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack Exynos 7420',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack Exynos 7570',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack Exynos 7870',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack Kirin 650',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack Kirin 655',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack Kirin 658',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack Kirin 710',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] New Wallhack Kirin 970',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack Mediatek P10',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack Mediatek P22',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack Mediatek P23',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack Mediatek P60',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack Mediatek P70',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack Mediatek X20',
      ' ‚ï†‚ïê‚ïê‚û£ [üñº] Wallhack Mediatek X25',
      '‚ï†‚ïê‚ïê‚û£ [üåà]  Color Exynos Red',
      '‚ï†‚ïê‚ïê‚û£ [üåà]  Color Exynos White',
      '‚ï†‚ïê‚ïê‚û£ [üåà]  Color Kirin Green',
      '‚ï†‚ïê‚ïê‚û£ [üåà]  Color Kirin Red',
      '‚ï†‚ïê‚ïê‚û£ [üåà]  Color Kirin White',
      '‚ï†‚ïê‚ïê‚û£ [üåà]  Color Kirin Yellow',
      '‚ï†‚ïê‚ïê‚û£ [üåà]  Color Mediatek Green',
      '‚ï†‚ïê‚ïê‚û£ [üåà]  Color Mediateks Red',
      '‚ï†‚ïê‚ïê‚û£ [üåà]  Color Mediatek Yellow',
      '‚ï†‚ïê‚ïê‚û£ [üåà]  Color Mediatek White',
      '‚ï†‚ïê‚ïê‚û£ [üåà]  Color Mediatek P22 Green',
      '‚ï†‚ïê‚ïê‚û£ [üåà]  Color Mediatek P22 Yellow',
      '‚ï†‚ïê‚ïê‚û£ [üåà]  Color Mediatek P60 Blue',
      '‚ï†‚ïê‚ïê‚û£ [üåà]  Color Mediatek P60 Red',
      '‚ï†‚ïê‚ïê‚û£ [üåà]  Color Mediatek P60 Yellow',
      '·òú·ó¥·ñáI'
}, nil, "·ó¥·ô≠Y·ëéO’è KI·ñáI·ëé ·ó∞·ó¥·ó™I·ó©T·ó¥K ·ó∞·ó¥·ëé·ëå ·óØ·ó©·í™·ïº·ó©·ëïK")
    if XYZFAN9 == nil then
    else
      if XYZFAN9[1] == true then
        ALLDEVICE2()
      end -- Decrypt CVaRy
      if XYZFAN9[2] == true then
        FIXBLINK2()
      end -- Decrypt CVaRy
      if XYZFAN9[3] == true then
        FIXSCOPE2()
      end -- Decrypt CVaRy
      if XYZFAN9[4] == true then
        WE7420()
      end -- Decrypt CVaRy
      if XYZFAN9[5] == true then
        WE7570()
      end -- Decrypt CVaRy
      if XYZFAN9[6] == true then
        WE7870()
      end -- Decrypt CVaRy
      if XYZFAN9[7] == true then
        KIRIN650()
      end -- Decrypt CVaRy
      if XYZFAN9[8] == true then
        KIRIN655()
      end -- Decrypt CVaRy
      if XYZFAN9[9] == true then
        KIRIN658()
      end -- Decrypt CVaRy
      if XYZFAN9[10] == true then
        KIRIN710()
      end -- Decrypt CVaRy
      if XYZFAN9[11] == true then
        KIRIN970()
      end -- Decrypt CVaRy
      if XYZFAN9[12] == true then
        WMP10()
      end -- Decrypt CVaRy
      if XYZFAN9[13] == true then
        WMP22()
      end -- Decrypt CVaRy
      if XYZFAN9[14] == true then
        WMP23()
      end -- Decrypt CVaRy
      if XYZFAN9[15] == true then
        WMP60()
      end -- Decrypt CVaRy
      if XYZFAN9[16] == true then
        WMP70()
      end -- Decrypt CVaRy
      if XYZFAN9[17] == true then
        WMX20()
      end -- Decrypt CVaRy
      if XYZFAN9[19] == true then
        WMX25()
      end -- Decrypt CVaRy
      if XYZFAN9[19] == true then
        CER()
      end -- Decrypt CVaRy
      if XYZFAN9[20] == true then
        CEW()
      end -- Decrypt CVaRy
      if XYZFAN9[21] == true then
        CKG()
      end -- Decrypt CVaRy
      if XYZFAN9[22] == true then
        CKR()
      end -- Decrypt CVaRy
      if XYZFAN9[23] == true then
        CKW()
      end -- Decrypt CVaRy
      if XYZFAN9[24] == true then
        CKY()
      end -- Decrypt CVaRy
      if XYZFAN9[25] == true then
        CMG()
      end -- Decrypt CVaRy
      if XYZFAN9[26] == true then
        CMR()
      end -- Decrypt CVaRy
      if XYZFAN9[27] == true then
        CMY()
      end -- Decrypt CVaRy
      if XYZFAN9[29] == true then
        CMW()
      end -- Decrypt CVaRy
      if XYZFAN9[29] == true then
        CMP22G()
      end -- Decrypt CVaRy
      if XYZFAN9[30] == true then
        CMP22Y()
      end -- Decrypt CVaRy
      if XYZFAN9[31] == true then
        CMP60B()
      end -- Decrypt CVaRy
      if XYZFAN9[32] == true then
        CMP60R()
      end -- Decrypt CVaRy
      if XYZFAN9[33] == true then
        CMP60Y()
      end -- Decrypt CVaRy
      if XYZFAN9[34] == true then
        WALLHACK()
      end -- Decrypt CVaRy
    end -- Decrypt CVaRy
    PUBGMH = -1
  end -- Decrypt CVaRy
  
  function ALLDEVICE2()
    gg.clearResults()
    gg.setRanges(gg.REGION_BAD)
    gg.searchNumber('2;1.8947657e-40;5.8013756e-42', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.refineNumber('2', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(10)
    gg.editAll('120', gg.TYPE_FLOAT)
    gg.clearResults()
    gg.searchNumber('2.718519e-43;3.7615819e-37;2;-1;1;-127', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.refineNumber('2', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(10)
    gg.editAll('120', gg.TYPE_FLOAT)
    gg.clearResults()
    gg.toast('Wallhack All Device ‚òëÔ∏è!üòà Aley Hack üòà‚Äù')
  end -- Decrypt CVaRy
  
  function FIXBLINK2()
    gg.clearResults()
    gg.setRanges(gg.REGION_BAD)
    gg.searchNumber('5.2806111e-40;6.50000333786;3.7615819e-37;2', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('2', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(20)
    gg.editAll('9999', gg.TYPE_FLOAT)
    gg.setRanges(gg.REGION_BAD)
    gg.searchNumber('1.1202011e-19;1.1202015e-19;3.7615819e-37;255.0;2', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('2', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(20)
    gg.editAll('9999', gg.TYPE_FLOAT)
    gg.toast('Wallhack Fix Blink All Device ‚òëÔ∏è!üòà Aley Hack üòà‚Äù')
  end -- Decrypt CVaRy
  
  function FIXSCOPE2()
    gg.clearResults()
    gg.setRanges(gg.REGION_BAD)
    gg.searchNumber('2.718519e-43F;3.7615819e-37F;2.0F;-1.0F;1.0F;-127.0F;0.00999999978F::200', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber(2, gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(3)
    gg.editAll('2.001', gg.TYPE_FLOAT)
    gg.searchNumber(2, gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(10)
    gg.editAll('120', gg.TYPE_FLOAT)
    gg.clearResults()
    gg.setRanges(gg.REGION_BAD)
    gg.searchNumber('5.8013756e-42F;-5.5695588e-40F;2.0F::100', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('2', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(3)
    gg.editAll('2.001', gg.TYPE_FLOAT)
    gg.searchNumber('2', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(10)
    gg.editAll('120', gg.TYPE_FLOAT)
    gg.clearResults()
    gg.toast('Wallhack Fix Scope ‚Äù')
  end -- Decrypt CVaRy
  
  function WE7420()
    gg.searchNumber('0.5;1.098618e-42;2.24207754e-44;2.69049305e-43;1.68155816e-44:645', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.refineNumber('0.5', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.refineNumber('0.5', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    revert = gg.getResults(25, nil, nil, nil, nil, nil, nil, nil, nil)
    for i, i in ipairs((gg.getResults(25, nil, nil, nil, nil, nil, nil, nil, nil))) do
      if i.flags == gg.TYPE_FLOAT then
        i.value = '0'
        i.freeze = true
      end -- Decrypt CVaRy
    end -- Decrypt CVaRy
    gg.addListItems((gg.getResults(25, nil, nil, nil, nil, nil, nil, nil, nil)))
    gg.processResume()
    gg.toast('Wallhack Exynos 7420 ‚Äù')
  end -- Decrypt CVaRy
  
  function WE7570()
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('360;0;0;0;-640;1;1;1;0;0;0;0;1;360;640;0.5;0;0;0;0.5;1;1;0;0;0;0;0;1;1;1;1;1,098618e-48:373', gg.TYPE_FLOAT)
    gg.searchNumber('0.5', gg.TYPE_FLOAT)
    t = gg.getResults(10)
    gg.editAll('50', gg.TYPE_FLOAT)
    t[1].value = '50'
    t[2].value = '50'
    t[3].value = '50'
    t[4].value = '50'
    t[5].value = '50'
    t[6].value = '50'
    t[1].freeze = true
    t[2].freeze = true
    t[3].freeze = true
    t[4].freeze = true
    t[5].freeze = true
    t[6].freeze = true
    print('addListItems: ', gg.addListItems(t))
    gg.toast('Wallhack Exynos 7570 ‚Äù')
  end -- Decrypt CVaRy
  
  function WE7870()
    gg.searchNumber('"0.5;0;1;2"', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.processResume()
    gg.refineNumber('"0.5"', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
    gg.editAll('"2"', gg.TYPE_FLOAT)
    gg.refineNumber('"0.5"', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
    gg.editAll('"1"', gg.TYPE_FLOAT)
    gg.refineNumber('"0.5"', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.addListItems((gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)))
    gg.toast('Wallhack Exynos 7870 ‚Äù')
  end -- Decrypt CVaRy
  
  function KIRIN650()
    gg.clearResults()
    gg.searchNumber('8.4077908e-45;4.2038954e-45;1.5694543e-43;1.4012985e-45;2.8025969e-45;268.0;480.0;0.5:149', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('0.5', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
    for i, i in ipairs((gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil))) do
      if i.flags == gg.TYPE_FLOAT then
        i.value = '1'
        i.freeze = true
      end -- Decrypt CVaRy
    end -- Decrypt CVaRy
    gg.addListItems((gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)))
    gg.toast('Wallhack Kirin 655 ‚Äù')
  end -- Decrypt CVaRy
  
  function KIRIN655()
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('0.5;1.4012985e-45;1.4012985e-45;3.8115318e-43;2.8025969e-45;2.2958874e-41:125', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('0.5', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    revert = gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)
    for i, i in ipairs((gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil))) do
      if i.flags == gg.TYPE_FLOAT then
        i.value = '20'
        i.freeze = true
      end -- Decrypt CVaRy
    end -- Decrypt CVaRy
    gg.addListItems((gg.getResults(10, nil, nil, nil, nil, nil, nil, nil, nil)))
    gg.toast('Wallhack Kirin 658 ‚Äù')
  end -- Decrypt CVaRy
  
  function KIRIN658()
    gg.clearResults()
    gg.searchNumber('1.8367379e-40;4.5917748e-40;4.2038954e-45;1.4012985e-45;1.793662e-43;1.4012985e-45;2.8025969e-45;1.1210388e-44;0.5:281', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('0.5', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    revert = gg.getResults(1, nil, nil, nil, nil, nil, nil, nil, nil)
    for i, i in ipairs((gg.getResults(1, nil, nil, nil, nil, nil, nil, nil, nil))) do
      if i.flags == gg.TYPE_FLOAT then
      end -- Decrypt CVaRy
    end -- Decrypt CVaRy
    gg.addListItems((gg.getResults(1, nil, nil, nil, nil, nil, nil, nil, nil)))
    gg.toast('Wallhack Kirin 710 ‚Äù')
  end -- Decrypt CVaRy
  
  function KIRIN970()
    gg.clearList()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('3.8530377e-34;1.4810267e-39;1.4012985e-45;4.2038954e-45;4.2038954e-45;7.0064923e-45;4.2038954e-45;1.4012985e-45;1.793662e-43;1.4012985e-45;2.8025969e-45;3.5873241e-43;1.1210388e-44;776.0;360.0;0.5:273', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.refineNumber('0.5', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(20)
    gg.getResults(20)
    gg.toast('Wallhack Kirin 970 ‚Äù')
  end -- Decrypt CVaRy
  
  function WMP10()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('7.70714155e-44;5.15677835e-43;0.5', gg.TYPE_FLOAT, false, gg.SIGN_FUZZY_EQUAL, 0, -1)
    gg.searchNumber('0.5', gg.TYPE_FLOAT, false, gg.SIGN_FUZZY_EQUAL, 0, -1)
    var = gg.getResults(20)
    gg.editAll('2', gg.TYPE_FLOAT)
    var = gg.getResults(100)
    gg.addListItems(var)
    gg.clearResults()
    gg.toast('Wallhack Mediatek P10 ‚Äù')
  end -- Decrypt CVaRy
  
  function WMP22()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('4;4;2;6;5;5;1;1;1;3::769', gg.TYPE_FLOAT, false, gg.SIGN_FUZZY_EQUAL, 0, -1)
    gg.searchNumber('3', gg.TYPE_FLOAT, false, gg.SIGN_FUZZY_EQUAL, 0, -1)
    var = gg.getResults(1)
    gg.editAll('140', gg.TYPE_FLOAT)
    var = gg.getResults(100)
    var[1].value = 140
    var[1].freeze = true
    gg.addListItems(var)
    gg.toast('Wallhack Mediatek P22 ‚Äù')
  end -- Decrypt CVaRy
  
  function WMP23()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('7.70714155e-44;5.15677835e-43;0.5', gg.TYPE_FLOAT, false, gg.SIGN_FUZZY_EQUAL, 0, -1)
    gg.searchNumber('0.5', gg.TYPE_FLOAT, false, gg.SIGN_FUZZY_EQUAL, 0, -1)
    var = gg.getResults(20)
    gg.editAll('2', gg.TYPE_FLOAT)
    var = gg.getResults(100)
    gg.addListItems(var)
    gg.clearResults()
    gg.toast('Wallhack Mediatek P23 ‚Äù')
  end -- Decrypt CVaRy
  
  function WMP60()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('5.1567783e-43;3.5873241e-43;3.2229865e-44;0.5', gg.TYPE_FLOAT, false, gg.SIGN_FUZZY_EQUAL, 0, -1)
    gg.searchNumber('0.5', gg.TYPE_FLOAT, false, gg.SIGN_FUZZY_EQUAL, 0, -1)
    var = gg.getResults(20)
    gg.editAll('2', gg.TYPE_FLOAT)
    var = gg.getResults(100)
    gg.addListItems(var)
    gg.clearResults()
    gg.toast('Wallhack Mediatek P60 ‚Äù')
  end -- Decrypt CVaRy
  
  function WMP70()
    gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("1.793662e-43;3.5873241e-43;1.1210388e-44;0.5", gg.TYPE_FLOAT, false, gg.SIGN_FUZZY_EQUAL, 0, -1)
gg.searchNumber("0.5", gg.TYPE_FLOAT, false, gg.SIGN_FUZZY_EQUAL, 0, -1)
revert = gg.getResults(20)
gg.editAll("2", gg.TYPE_FLOAT)
revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
local t = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
for i, v in ipairs(t) do
if v.flags == gg.TYPE_FLOAT then
v.value = "2"
v.freeze = true
end -- Decrypt CVaRy
end -- Decrypt CVaRy
gg.addListItems(t)
t = nil
gg.toast("Done")
gg.clearResults()

  end -- Decrypt CVaRy
  
  function WMX20()
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('0.5;360;640;1;1;1;-640;360::', gg.POINTER_WRITABLE, false, gg.SIGN_FUZZY_EQUAL, 0, -1)
    gg.searchNumber('0.5', gg.POINTER_WRITABLE, false, gg.SIGN_FUZZY_EQUAL, 0, -1)
    var = gg.getResults(20)
    gg.editAll('0', gg.POINTER_WRITABLE)
    var = gg.getResults(100)
    gg.addListItems(var)
    gg.clearResults()
    gg.clearResults()
    gg.searchNumber('56;64;48::35', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('56', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(100)
    gg.editAll('47', gg.TYPE_DWORD)
    gg.toast('Wallhack Mediatek X20 ‚Äù')
  end -- Decrypt CVaRy
  
  function WMX25()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('640.0;360;0.5;0;640;360;0.5;12000;0.27913400531;0.56855899096::', gg.POINTER_WRITABLE, false, gg.SIGN_FUZZY_EQUAL, 0, -1)
    gg.searchNumber('0.5', gg.POINTER_WRITABLE, false, gg.SIGN_FUZZY_EQUAL, 0, -1)
    var = gg.getResults(20)
    gg.editAll('2', gg.POINTER_WRITABLE)
    var = gg.getResults(100)
    gg.addListItems(var)
    gg.clearResults()
    gg.toast('Wallhack Mediatek X25 ‚Äù')
  end -- Decrypt CVaRy
  
  function CER()
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('24;802824704;32;2::21', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.refineNumber('24', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(5)
    gg.editAll('22', gg.TYPE_DWORD)
    gg.toast('Color Exynos Red ‚Äù')
  end -- Decrypt CVaRy
  
  function CEW()
    gg.clearResults()
    gg.setRanges(gg.REGION_ANONYMOUS)
    gg.searchNumber('573.70306396484;0.05499718338;1::50', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('1', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(1)
    gg.editAll('999', gg.TYPE_FLOAT)
    gg.clearResults()
    gg.toast('Color Exynos White ‚Äù')
  end -- Decrypt CVaRy
  
  function CKG()
    gg.clearResults()
    gg.searchNumber('24;802824704;32;2:21', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.refineNumber('24', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
    gg.editAll('20', gg.TYPE_DWORD)
    gg.processResume()
    gg.clearResults()
    gg.toast('Color Kirin Green ‚Äù')
  end -- Decrypt CVaRy
  
  function CKR()
    gg.clearResults()
    gg.searchNumber('24;802824704;32;2::21', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.processResume()
    gg.refineNumber('24', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
    gg.editAll('22', gg.TYPE_DWORD)
    gg.clearResults()
    gg.toast('Color Kirin Red ‚Äù')
  end -- Decrypt CVaRy
  
  function CKW()
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('40D;32D;16D;2D::37', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('40', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(100)
    gg.editAll('42', gg.TYPE_DWORD)
    gg.toast('Color Kirin White ‚Äù')
  end -- Decrypt CVaRy
  
  function CKY()
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('16;32;40;48;40:41', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('40', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(10)
    gg.editAll('36', gg.TYPE_DWORD)
    gg.toast('Color Kirin Yellow ‚Äù')
  end -- Decrypt CVaRy
  
  function CMG()
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('16;32;40;48;40:41', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('40', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(10)
    gg.editAll('36', gg.TYPE_DWORD)
    gg.clearResults()
    gg.toast('Color Mediatek Green ‚Äù')
  end -- Decrypt CVaRy
  
  function CMR()
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('8;16;32;48;40::169', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('40', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(10)
    gg.editAll('38', gg.TYPE_DWORD)
    gg.clearResults()
    gg.toast('Color Mediatek Red ‚Äù')
  end -- Decrypt CVaRy
  
  function CMY()
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('16;32;40;48;40:41', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('40', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(10)
    gg.editAll('36', gg.TYPE_DWORD)
    gg.toast('Color Mediatek Yellow ‚Äù')
  end -- Decrypt CVaRy
  
  function CMW()
    gg.clearResults()
    gg.setRanges(gg.REGION_ANONYMOUS)
    gg.searchNumber('573.70306396484;0.05499718338;1::50', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('1', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(1)
    gg.editAll('999', gg.TYPE_FLOAT)
    gg.clearResults()
    gg.toast('Color Mediatek White ‚Äù')
  end -- Decrypt CVaRy
  
  function CMP22G()
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('16;29;29;56:21', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.refineNumber('56', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
    gg.editAll('33', gg.TYPE_DWORD)
    gg.toast('Color Mediatek P22 Green ‚Äù')
  end -- Decrypt CVaRy
  
  function CMP22Y()
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('16;29;29;56:21', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('56', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(1)
    gg.editAll('32', gg.TYPE_DWORD)
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('64;32;65;33:29', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('65', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(3)
    gg.editAll('32', gg.TYPE_DWORD)
    gg.toast('Color Mediatek P22 Yellow ‚Äù')
  end -- Decrypt CVaRy
  
  function CMP60B()
    gg.clearResults()
    gg.setRanges(4)
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('802,824,192;48;937,041,920;40;736,370,688;32;802,824,192;48;802,824,192;16;802,824,192;2;2::', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.searchNumber('40', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(100)
    gg.editAll('28', gg.TYPE_DWORD)
    gg.toast('Color Mediatek P60 Blue ‚Äù')
  end -- Decrypt CVaRy
  
  function CMP60R()
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('1.68155816e-44F;1.62092562e-12F;3162688022693019688Q;1.62092562e-12F;2.24207754e-44F:241', gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.refineNumber('3162688022693019688', gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
    revert = gg.getResults(25, nil, nil, nil, nil, nil, nil, nil, nil)
    gg.editAll('38', gg.TYPE_QWORD)
    gg.toast('Color Mediatek P60 Red ‚Äù')
  end -- Decrypt CVaRy
  
  function CMP60Y()
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber('1.68155816e-44F;1.62092562e-12F;3162688022693019688Q;1.62092562e-12F;2.24207754e-44F:241', gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
    gg.refineNumber('3162688022693019688', gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
    revert = gg.getResults(25, nil, nil, nil, nil, nil, nil, nil, nil)
    gg.editAll('36', gg.TYPE_QWORD)
    gg.toast('Color Mediatek P60 Yellow ‚Äù')
  end -- Decrypt CVaRy

function HileMenu()
DN = gg.multiChoice({
 "’èI·ñ¥I·ñá ’è·ó¥K·ó∞·ó¥·ó∞·ó¥",
 "’è·ó¥K·ó∞·ó¥·ó∞·ó¥",
 "·óØ·ó©·í™’è·ïºOT",
 "·ó∞·ó©·òúI·ëï ·ó∑·ëå·í™·í™·ó¥T",
 "Y·ëåK’è·ó¥K ·ïº·ó©’è·ó©·ñá",
 "·ó©I·ó∞·ó∑OT",
 "·ó©I·ó∞·í™O·ëïK",
 "·ïºI·òî·í™I ·ó∞·ó¥·ñá·ó∞I",
 "K·ó©·ñ¥·ó©·ó™·ó©·ëé ·êØ·ëå·ñá·ó∞·ó©",
 "·ëï·ñáO’è·ïº·ó©I·ñá",
 "·òú·ó¥·ñáI",
}, nil, "’èI·í™·ó©·ïº ·ïºI·í™·ó¥’èI ·ó∞·ó¥·ëé·ëå")
if DN == nil then
else 
if DN[1] == true then Sekmeme()end -- Decrypt CVaRy
if DN[2] == true then AzSekmeme()end -- Decrypt CVaRy
if DN[3] == true then WallShot()end -- Decrypt CVaRy
if DN[4] == true then MagicBullet()end -- Decrypt CVaRy
if DN[5] == true then FixDamage()end -- Decrypt CVaRy
if DN[6] == true then Aimbot()end -- Decrypt CVaRy
if DN[7] == true then Aimlk()end -- Decrypt CVaRy
if DN[8] == true then HizliMermi()end -- Decrypt CVaRy
if DN[9] == true then KafadanVurma()end -- Decrypt CVaRy
if DN[10] == true then SmallCroshair()end -- Decrypt CVaRy
if DN[11] == true then HOME()end -- Decrypt CVaRy
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy

function Sekmeme()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("50;200;0.5;40.0;0.3:512", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("0.3", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.getResults(20)
--[[ count: 0 ]]
gg.editAll("300", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("1;10000D;100000:512", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 243 ]]
gg.getResults(200)
--[[ count: 200 ]]
gg.editAll("0.001", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("0.2~0.3;53;30;1::", gg.TYPE_FLOAT)
--[[ found: 0 ]]
gg.searchNumber("0.2~0.3;1::", gg.TYPE_FLOAT)
--[[ found: 0 ]]
gg.getResults(200)
--[[ count: 0 ]]
gg.editAll("1.4012985e-45", gg.TYPE_FLOAT)
gg.toast("No Recoil")
end -- Decrypt CVaRy

function AzSekmeme()
gg.clearResults()
gg.setRanges(8)
gg.setVisible(false)
gg.searchNumber("-2.2673448e24;-1.36203639e28", 16, false, 536870912, 0, -1)
gg.setVisible(false)
gg.setVisible(false)
gg.searchNumber("-1.36203639e28", 16, false, 536870912, 0, -1)
gg.setVisible(false)
gg.setVisible(false)
gg.getResults(99)
gg.editAll("0", 16)
gg.clearResults()
gg.setVisible(false)
  gg.toast(" Less Recoil Aktif")
  end -- Decrypt CVaRy
  
function WallShot()
  gg.clearResults()
gg.searchNumber("1.0e-7;2.0;2.0;2.0;2.0;1.0::37", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(6)
gg.editAll("1.0e-7;0;0;2.0;0;1.0", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("90.775703430176;0;8;15;16;18;28", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("28", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("1000", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("90.775703430176;8;27.25;18;16", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("18", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
gg.editAll("140", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_C_BSS)
gg.searchNumber("1.0e-7;1.0e-7;2;2;1::512", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(20)
gg.editAll("0", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast(" Wallshot Aktif Edildi ")
end -- Decrypt CVaRy

function MagicBullet()
gg.setRanges(gg.REGION_CODE_APP)
gg.clearResults()
gg.searchNumber("495979008;-300938736;-481296384;318772964;-300938736:129", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("-300938736", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
revert = gg.getResults(45, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("0", gg.TYPE_DWORD)
gg.processResume()
gg.toast(" Magic Bullet aktif Edildi")
  end -- Decrypt CVaRy
  
function FixDamage()
  gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("88000;0.08600000292", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("88000", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1401)
gg.editAll("37401", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("87000;0.09600000083", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("87000", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1401)
gg.editAll("37401", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("71500;0.10000000149", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("71500", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1401)
gg.editAll("37401", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("71500;0.109", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("71500", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1401)
gg.editAll("37401", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("91500;0.07500000298", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("91500", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1401)
gg.editAll("37401", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("71500", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("71500", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1401)
gg.editAll("37401", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("94000;0.08570999652", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("94000", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1401)
gg.editAll("37401", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("90000;0.07500000298", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("90000", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1401)
gg.editAll("37401", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast(" Fix Damage D√ºzeltildi")
end -- Decrypt CVaRy

function Aimbot()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("3.5;1;200;20::999", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("3.5;1;200;20", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.getResults(300)
--[[ count: 0 ]]
gg.editAll("-1.0e10", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("3.5;1;200;20::999", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("3.5;1;200;20::959", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.getResults(100)
--[[ count: 0 ]]
gg.editAll("-99999", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Aimbot aim")
end -- Decrypt CVaRy

  function Aimlk()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("-88.66608428955;26:512", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("26", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(2)
gg.editAll("-460", gg.TYPE_FLOAT)
gg.searchNumber("-88.73961639404;28:512", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("28", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(2)
gg.editAll("-560", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("9.201618;30.5;25", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("25;30.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("250", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast(" Aley Aimlock Aktif ‚úÖ")
end -- Decrypt CVaRy

function HizliMermi()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("1868784978;1850305641;28518", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("1868784978", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1000)
gg.editAll("1868756421", gg.TYPE_DWORD)
gg.clearResults()
gg.searchNumber("1750294898;1415932769;1819307365", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("1750294898;1415932769;1819307365", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1000)
gg.editAll("120000", gg.TYPE_DWORD)
gg.clearResults()
gg.toast(" Hƒ±zlƒ± Mermi Aktif Edildi")
end -- Decrypt CVaRy

function KafadanVurma()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("25;30.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
gg.editAll("300;305", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Magic [100%] activated")
gg.setVisible(false)
gg.setVisible(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_DATA | gg.REGION_CODE_APP)
gg.searchNumber("0.10000000149;64.50088500977", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("0.10000000149", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(50)
gg.editAll("8", gg.TYPE_FLOAT)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("-88.66608428955;26:512", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("26", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(2)
gg.editAll("-460", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("-88.73961639404;28:512", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("28", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(2)
gg.editAll("-560", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("9.201618;30.5;25", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("25;30.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("250", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_C_DATA | gg.REGION_CODE_APP)
gg.searchNumber("-298284466;-1.304566e23F", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("-298284466", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(99)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_C_DATA | gg.REGION_CODE_APP)
gg.searchNumber("-1,883,348,481,058,764,210", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(99)
gg.editAll("-1,883,348,485,055,444,540", gg.TYPE_QWORD)
gg.clearResults()
gg.toast("  Kafadan Vurma Aktif")
  end -- Decrypt CVaRy
  
  function SmallCroshair()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("2~4;1.09375;1;18;3.5::25", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2~4;1.09375::5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 0 ]]
gg.searchNumber("2~4", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
--[[ found: 26 ]]
gg.getResults(50)
--[[ count: 26 ]]
gg.editAll("-0.5", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Small Crosshair")
end -- Decrypt CVaRy

function RankPush()
PN = gg.multiChoice({
 "·ó©·ëéT·ó¥·ëé",
 "K·ó©·ñ¥·ó©·ó™·ó©·ëé ·êØ·ëå·ñá",
 "’è·ó¥K·ó∞·ó¥·ó∞·ó¥",
 "I·ë≠·ó©·ó™ ·ó∞O·ó™",
 "·òú·ó¥·ñáI",
}, nil, "·ñá·ó©·ëéK·ë≠·ëå’è·ïº")
if PN == nil then
else 
if PN[1] == true then Anten1()end -- Decrypt CVaRy
if PN[2] == true then KafadanVurma1()end -- Decrypt CVaRy
if PN[3] == true then AzSekmeme1()end -- Decrypt CVaRy
if PN[4] == true then IpadMod1()end -- Decrypt CVaRy
if PN[5] == true then HOME()end -- Decrypt CVaRy
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy

function Anten1()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("88.50576019287F;87.27782440186F;-100.91194152832F;1F::13", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("88.50576019287F;87.27782440186F;1F", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(6)
gg.editAll("1.96875;1.96875;999;1.96875;1.96875;999", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("  Anten Aktif")
end -- Decrypt CVaRy

function KafadanVurma1()
gg.clearResults()
gg.setRanges(gg.REGION_BAD)
gg.searchNumber("-88.66608428955;26:512", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("26", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(2)
gg.editAll("-460", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("-88.73961639404;28:512", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("28", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(2)
gg.editAll("-560", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("9.201618;30.5;25", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("25;30.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("10000", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("  Kafadan Vurma Aktif")
  end -- Decrypt CVaRy
  
  function AzSekmeme1()
gg.clearResults()
gg.setRanges(8)
gg.setVisible(false)
gg.searchNumber("-2.2673448e24;-1.36203639e28", 16, false, 536870912, 0, -1)
gg.setVisible(false)
gg.setVisible(false)
gg.searchNumber("-1.36203639e28", 16, false, 536870912, 0, -1)
gg.setVisible(false)
gg.setVisible(false)
gg.getResults(99)
gg.editAll("0", 16)
gg.clearResults()
gg.setVisible(false)
  gg.toast(" Less Recoil Aktif")
  end -- Decrypt CVaRy
  
  function IpadMod1()
 gg.setRanges(gg.REGION_ANONYMOUS)
  gg.clearResults()
  gg.searchNumber("220;178;15 ", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("220", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(300)
  gg.editAll("438", gg.TYPE_FLOAT)
  gg.clearResults()
  gg.toast("  ƒ∞pad Mod Aktif")
    end -- Decrypt CVaRy

function HizMenu()
ON = gg.multiChoice({
 "·ëå·ó©·òî ·ëå·ëï·ëå·ñá",
 "’èIT’è·ëïO·ë≠·ó¥",
 "·ëå·òî·ëå·ë≠ ·òîI·ë≠·í™·ó©",
 "·ó™·ëå·êØ·ó©·ñá ·ó©·ñáK·ó©’èI ·ó¥·í™ ’èIT’è·ëïO·ë≠·ó¥",
 "·òú·ó¥·ñáI",
 }, nil, "·ó¥·òú·í™·ó¥·ëé·ëï·ó¥ ·ó∞·ó¥·ëé·ëå")
if ON == nil then
else 
if ON[1] == true then UazFly()end -- Decrypt CVaRy
if ON[2] == true then UazBuggyHiz()end
if ON[3] == true then DaciaHiz()end
if ON[4] == true then SpeedAc()end
if ON[5] == true then HOME()end
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy

function UazFly()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("0.00055555557;49.9999961853;24.99999809265", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("0.00055555557", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("0.00455555557", gg.TYPE_FLOAT)
gg.toast(" Uaz Fly Aktif")
gg.setVisible(false)
end -- Decrypt CVaRy

function UazBuggyHiz()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.setVisible(false)
gg.searchNumber("4138667321167981973", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("4138667321167981973", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("4138667321167981973", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(200)
gg.editAll("4848124999984742400", gg.TYPE_QWORD)
gg.clearResults()
gg.toast("Sit+Scope Aktif")
end -- Decrypt CVaRy

function DaciaHiz()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("7.0064923e-45F;0.6~1;1065353216D;100F;1065353216D;2500000000F;0.10000000149F;88F::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("7.0064923e-45F;0.6~1;1065353216D;100F;1065353216D;2500000000F;0.10000000149F;88F::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("0.6~1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("0.6~1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(2500)
gg.editAll("3.5241295", gg.TYPE_FLOAT)
gg.editAll("3.5241295", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("300;0;0.05000000075;2;25::17", gg.TYPE_FLOAT, false)
gg.searchNumber("300;0;0.05000000075;2;25::17", gg.TYPE_FLOAT, false)
gg.refineNumber("0.05000000075", gg.TYPE_FLOAT, false)
gg.refineNumber("0.05000000075", gg.TYPE_FLOAT, false)
gg.getResults(2400)
gg.editAll("2.1241295", gg.TYPE_FLOAT)
gg.editAll("2.1241295", gg.TYPE_FLOAT)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("-6.1526231e27;-1.0070975e28::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("-6.1526231e27", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1)
gg.editAll("0", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Uzun Zƒ±plama Aktif")
end -- Decrypt CVaRy

function SpeedAc()
gg.clearResults()
  gg.setRanges(gg.REGION_ANONYMOUS)
  gg.searchNumber("4,890,205,508,990,664,704", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
  WALLJUMPOFF=gg.getResults(100)
  gg.editAll("4,890,205,509,012,684,800", gg.TYPE_QWORD)
  gg.toast(" Wall Jump Aktif ")
end -- Decrypt CVaRy

 function OyunMenu()
KN = gg.multiChoice({
 "·ó©·ëéT·ó¥·ëé",
 "·ëïI·ó∞ K·ó©·í™·ó™I·ñá",
 "I·ë≠·ó©·ó™ ·ó∞O·ó™",
 "·ëå·òî·ëå·ëé ·ó¥·í™",
 "·òú·ó¥·ñáI",
}, nil, "OY·ëå·ëé ·ó∞·ó¥·ëé·ëå’è·ëå")
if KN == nil then
else 
if KN[1] == true then Anten()end -- Decrypt CVaRy
if KN[2] == true then CimYok()end -- Decrypt CVaRy
if KN[3] == true then IpadMod()end -- Decrypt CVaRy
if KN[4] == true then SisYok()end -- Decrypt CVaRy
if KN[5] == true then HOME()end -- Decrypt CVaRy
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy

function Anten()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("88.50576019287F;87.27782440186F;-100.91194152832F;1F::13", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("88.50576019287F;87.27782440186F;1F", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(6)
gg.editAll("1.96875;1.96875;999;1.96875;1.96875;999", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("  Anten Aktif")
end -- Decrypt CVaRy

function CimYok()
gg.clearResults()
  gg.setRanges(gg.REGION_ANONYMOUS)
  gg.searchNumber(":Default__MaterialExpressionLandscapeGrassOutput", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(500)
  gg.editAll("0", gg.TYPE_BYTE)
  gg.clearResults()
  gg.clearResults()
  gg.setRanges(16384)
  gg.setVisible(false)
  gg.searchNumber("-298,841,535D;-8.32321416e22", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.setVisible(false)
  gg.refineNumber("-298,841,535", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.setVisible(false)
  gg.refineAddress("098", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
  gg.setVisible(false)
  gg.getResults(1)
  gg.setVisible(false)
  gg.editAll("0", gg.TYPE_DWORD)
  gg.clearResults()
gg.toast("  √áim yok Aktif")
end -- Decrypt CVaRy

   function IpadMod()
 gg.setRanges(gg.REGION_ANONYMOUS)
  gg.clearResults()
  gg.searchNumber("220;178;15 ", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("220", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(300)
  gg.editAll("438", gg.TYPE_FLOAT)
  gg.clearResults()
  gg.toast("  ƒ∞pad Mod Aktif")
    end -- Decrypt CVaRy
    
    function SisYok()
  gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.setVisible(false)
gg.searchNumber("4138667321167981973", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("4138667321167981973", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("4138667321167981973", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(200)
gg.editAll("4848124999984742400", gg.TYPE_QWORD)
gg.clearResults()
  end -- Decrypt CVaRy
  
function UcmaMenu()
YN = gg.multiChoice({
    "K·ó©·ñáTO·ëé ’è·ó¥TI",
    "’è·ó¥T ·ñ¥I·ñá·ó©·êØ·ëå·ó∑",
    "·ó∞416 ·ó∞·ó©’èK·ó©·ñá·ó©",
    "·ó∞416 ·ó∑·ëå·òî",
    "·ó∞416 K·ó¥·ñáT·ó¥·ëéK·ó¥·í™·ó¥",
    "·ó©K·ó∞ ·ó∑·ëå·òî",
    "·òú·ó¥·ñáI",
}, nil, "’èKI·ëé ·ó∞·ó¥·ëé·ëå’è·ëå")
if YN == nil then 
else
if YN[1] == true then T()end -- Decrypt CVaRy
if YN[2] == true then L()end -- Decrypt CVaRy
if YN[3] == true then G()end -- Decrypt CVaRy
if YN[4] == true then n()end -- Decrypt CVaRy
if YN[5] == true then u()end -- Decrypt CVaRy
if YN[6] == true then l()end 
if YN[7] == true then HOME()end -- Decrypt CVaRy
  end -- Decrypt CVaRy
 PUBGMH = -1
end -- Decrypt CVaRy

function T()
function split(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find (szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len (szFullString)) break end nSplitArray[nSplitIndex] = string.sub (szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len (szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end function xgxc(szpy, qmxg) for x = 1, #(qmxg) do xgpy = szpy + qmxg[x]["offset"] xglx = qmxg[x]["type"] xgsz = qmxg[x]["value"] xgdj = qmxg[x]["freeze"] if xgdj == nil or xgdj == "" then gg.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) else gg.addListItems({[1] = {address = xgpy, flags = xglx, freeze = xgdj, value = xgsz}}) end xgsl = xgsl + 1 xgjg = true end end function xqmnb(qmnb) gg.clearResults() gg.setRanges(qmnb[1]["memory"]) gg.searchNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "ÂºÄÂêØÂ§±Ë¥•") else gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "ÂºÄÂêØÂ§±Ë¥•") else sl = gg.getResults(999999) sz = gg.getResultCount() xgsl = 0 if sz > 999999 then sz = 999999 end for i = 1, sz do pdsz = true for v = 4, #(qmnb) do if pdsz == true then pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + qmnb[v]["offset"] pysz[1].flags = qmnb[v]["type"] szpy = gg.getValues(pysz) pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value szpd = split(pdpd, ";") tzszpd = szpd[1] pyszpd = szpd[2] if tzszpd == pyszpd then pdjg = true pdsz = true else pdjg = false pdsz = false end end end if pdjg == true then szpy = sl[i].address xgxc(szpy, qmxg) end end if xgjg == true then gg.toast(qmnb[2]["name"] .. "ÂºÄÂêØÊàêÂäüÔºå‰∏ÄÂÖ±‰øÆÊîπ" .. xgsl .. "Êù°Êï∞ÊçÆ") else gg.toast(qmnb[2]["name"] .. "Êú™ÊêúÁ¥¢Âà∞Êï∞ÊçÆÔºåÂºÄÂêØÂ§±Ë¥•") end end end end function SearchWrite(Search, Write, Type) gg.clearResults() gg.setVisible(false) gg.searchNumber(Search[1][1], Type) local count = gg.getResultCount() local result = gg.getResults(count) gg.clearResults() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do local tmp = {} local offset = Search[k][2] - base local num = Search[k][1] for i, v in ipairs(result) do tmp[#tmp+1] = {} tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = gg.getValues(tmp) for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then local t = {} local base = Search[1][2] for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {} t[#t].address = data[i] + offset t[#t].flags = Type t[#t].value = w[1] if (w[3] == true) then local item = {} item[#item+1] = t[#t] item[#item].freeze = true gg.addListItems(item) end end end gg.setValues(t) gg.toast("ÂºÄÂêØÊàêÂäüÔºå‰∏ÄÂÖ±‰øÆÊîπ"..#t.."Êù°Êï∞ÊçÆ") gg.addListItems(t) else gg.toast("Êú™ÊêúÁ¥¢Âà∞Êï∞ÊçÆÔºåÂºÄÂêØÂ§±Ë¥•", false) return false end else gg.toast("Not Found") return false end end
qmnb = {
{["memory"] = 32},
{["name"] = "@CHINAPUBGMOBILEHACKS"},
{["value"] = 1400129, ["type"] = 4},
{["lv"] = 519, ["offset"] = 4, ["type"] = 4},
}
qmxg = {
{["value"] = 1405720, ["offset"] = 0, ["type"] = 4},

}
xqmnb(qmnb)
end -- Decrypt CVaRy

function L()
function split(szFullString, szSeparator)
local nFindStartIndex = 1 
local nSplitIndex = 1 
local nSplitArray = {} while true do 
local 
nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex) 
if not nFindLastIndex then 
nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString)) 
break end 
nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1) 
nFindStartIndex = nFindLastIndex + string.len(szSeparator) 
nSplitIndex = nSplitIndex + 1 end return 
nSplitArray end function 
xgxc(szpy, MS) for x = 1, #(MS) do 
xgpy = szpy + MS[x]["offset"] xglx = MS[x]["type"] 
xgsz = MS[x]["value"] 
gg.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) 
xgsl = xgsl + 1 end end function 
MoShinp(MoShi) 
gg.clearResults() 
gg.setRanges(MoShi[1]["memory"]) 
gg.searchNumber(MoShi[3]["value"], MoShi[3]["type"]) 
if gg.getResultCount() == 0 then 
gg.toast(MoShi[2]["name"] .. "")
else 
gg.refineNumber(MoShi[3]["value"], MoShi[3]["type"]) 
gg.refineNumber(MoShi[3]["value"], MoShi[3]["type"]) 
gg.refineNumber(MoShi[3]["value"], MoShi[3]["type"]) 
if gg.getResultCount() == 0 then 
gg.toast(MoShi[2]["name"] .. "") 
else 
sl = gg.getResults(999999) 
sz = gg.getResultCount() 
xgsl = 0 if sz > 999999 then 
sz = 999999 end for i = 1, sz do 
pdsz = true for v = 4, #(MoShi) do if 
pdsz == true then 
pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + MoShi[v]["offset"] 
pysz[1].flags = MoShi[v]["type"] 
szpy = gg.getValues(pysz) 
pdpd = MoShi[v]["lv"] .. ";" .. szpy[1].value szpd = split(pdpd, ";") 
tzszpd = szpd[1] 
pyszpd = szpd[2] 
if tzszpd == pyszpd then 
pdjg = true pdsz = true else 
pdjg = false pdsz = false end end end 
if pdjg == true then 
szpy = sl[i].address xgxc(szpy, MS) 
xgjg = true end end 
if xgjg == true then 
gg.toast(MoShi[2]["name"] .. "" .. xgsl .. "") 
else 
gg.toast(MoShi[2]["name"] .. "") 
end 
end 
end 
end


function SearchWrite(Search, Write, Type)
    gg.clearResults()
    gg.setVisible(false)
    gg.searchNumber(Search[1][1], Type)
    local count = gg.getResultCount()
    local result = gg.getResults(count)
    gg.clearResults()
    local data = {} 
    local base = Search[1][2] 
    
   if (count > 0) then
        for i, v in ipairs(result) do
            v.isUseful = true 
        end
        
        for k=2, #Search do
            local tmp = {}
            local offset = Search[k][2] - base 
            local num = Search[k][1] 
            
            for i, v in ipairs(result) do
                tmp[#tmp+1] = {} 
                tmp[#tmp].address = v.address + offset  
                tmp[#tmp].flags = v.flags  
            end
            
            tmp = gg.getValues(tmp) 
            
            for i, v in ipairs(tmp) do
                if ( tostring(v.value) ~= tostring(num) ) then 
                    result[i].isUseful = false 
                end
            end
        end
  
        for i, v in ipairs(result) do
            if (v.isUseful) then 
                data[#data+1] = v.address
            end
        end
     
        if (#data > 0) then
           gg.toast(""..#data.."")
           local t = {}
           local base = Search[1][2]
           for i=1, #data do
               for k, w in ipairs(Write) do
                   offset = w[2] - base
                   t[#t+1] = {}
                   t[#t].address = data[i] + offset
                   t[#t].flags = Type
                   t[#t].value = w[1]
                  
                   if (w[3] == true) then
                       local item = {}
                       item[#item+1] = t[#t]
                       item[#item].freeze = true
                       gg.addListItems(item)
                   end
                 
               end
           end
           gg.setValues(t)
       
        else
            gg.toast("", false)
            return false
        end
    else
        gg.toast("")
        return false
    end
end


local app = {}
function Assert(data)
if data == nil or data == "" or data == "nil" then
return false
else
return true
end
end
function mearrass(memory, array)
if Assert(memory) and Assert(array) then
return true
else
return false
end
end
function typetab(array, type)
local datatype = {}
for i = 1, #array do
if Assert(array[i].type) then
table.insert(datatype, i, array[i].type)
else
if Assert(type) then
table.insert(datatype, i, type)
else
return false
end
end
end
return true, datatype
end
function app.memorysearch(memory, array, type)
gg.setVisible(false)
local rx = mearrass(memory, array)
if rx then
local rx, datatype = typetab(array, type)
if rx then
if Assert(array[1].hv) then
gg.clearResults()
gg.setRanges(memory)
gg.searchNumber(array[1].lv .. "~" .. array[1].hv, datatype[1])
else
gg.clearResults()
gg.setRanges(memory)
gg.searchNumber(array[1].lv, datatype[1])
end
if gg.getResultCount() == 0 then
return false
else
local tab = {}
local data = gg.getResults(gg.getResultCount())
gg.clearResults()
for i = 1, #data do
data[i].rx = true
end
for i = 2, #array do
local t = {}
local offset = array[i].offset
for x = 1, #data do
t[#t + 1] = {}
t[#t].address = data[x].address + offset
t[#t].flags = datatype[i]
end
local t = gg.getValues(t)
for z = 1, #t do
if Assert(array[i].hv) then
if tonumber(t[z].value) < tonumber(array[i].lv) or tonumber(t[z].value) > tonumber(array[i].hv) then
data[z].rx = false
end
else
if tostring(t[z].value) ~= tostring(array[i].lv) then
data[z].rx = false
end
end
end
end
for i = 1, #data do
if data[i].rx then
tab[#tab + 1] = data[i].address
end
end
if #tab > 0 then
return true, tab
else
return false
end
end
else
print("wrong type parameter")
gg.toast("wrong type parameter")
os.exit()
end
else
print("memory or array parameter error")
gg.toast("memory or array parameter error")
os.exit()
end
end
function app.memoryread(addr, type)
local t = {}
t[1] = {}
t[1].address = addr
t[1].flags = type
if #t > 0 then
return true, gg.getValues(t)[1].value
else
return false
end
end
function app.memorywrite(addr, type, value, freeze)
local t = {}
t[1] = {}
t[1].address = addr
t[1].flags = type
t[1].value = value
if #t > 0 then
if Assert(freeze) then
t[1].freeze = freeze

return gg.addListItems(t)
else
return gg.setValues(t)
end
else
return false
end
end

function edit(orig,ret)_om=orig[1].memory or orig[1][1]_ov=orig[3].value or orig[3][1]_on=orig[2].name or orig[2][1]gg.clearResults()gg.setRanges(_om)gg.searchNumber(_ov,orig[3].type or orig[3][2])sz=gg.getResultCount()if sz<1 then gg.toast(_on.."Ë†ë¬ÄËú∑ÔΩØËûüÔΩ±ÈõçÔΩ•")else sl=gg.getResults(720)for i=1,sz do ist=true for v=4,#orig do if ist==true and sl[i].value==_ov then cd={{}}cd[1].address=sl[i].address+(orig[v].offset or orig[v][2])cd[1].flags=orig[v].type or orig[v][3]szpy=gg.getValues(cd)cdlv=orig[v].lv or orig[v][1]cdv=szpy[1].value if cdlv==cdv then pdjg=true ist=true else pdjg=false ist=false end end end if pdjg==true then szpy=sl[i].address for x=1,#(ret)do xgpy=szpy+(ret[x].offset or ret[x][2])xglx=ret[x].type or ret[x][3]xgsz=ret[x].value or ret[x][1]xgdj=ret[x].freeze or ret[x][4]xgsj={{address=xgpy,flags=xglx,value=xgsz}}if xgdj==true then xgsj[1].freeze=xgdj gg.addListItems(xgsj)else gg.setValues(xgsj)end end xgjg=true end end if xgjg==true then gg.toast(_on.."Open successfully")else gg.toast(_on.."Open failed")end end end
function SearchWrite(Search, Write, Type) gg.clearResults() gg.setVisible(false) gg.searchNumber(Search[1][1], Type) local count = gg.getResultCount() local result = gg.getResults(count) gg.clearResults() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do local tmp = {} local offset = Search[k][2] - base local num = Search[k][1] for i, v in ipairs(result) do tmp[#tmp+1] = {} tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = gg.getValues(tmp) for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then gg.toast("Ë¨≥ÊáÉÔΩ¥ÔΩ¢ËõªÔΩ∞"..#data.."Ë≠öÔΩ°Ë¨®ÔΩ∞Ë¨êÔΩÆ") local t = {} local base = Search[1][2] for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {} t[#t].address = data[i] + offset t[#t].flags = Type t[#t].value = w[1] if (w[3] == true) then local item = {} item[#item+1] = t[#t] item[#item].freeze = true gg.addListItems(item) end end end gg.setValues(t) gg.toast("already edited"..#t.."Article data") gg.addListItems(t) else gg.toast("not found", false) return false end else gg.toast("Not Found") return false end end
function split(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString)) break end nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len(szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end function xgxc(szpy, qmxg) for x = 1, #(qmxg) do xgpy = szpy + qmxg[x]["offset"] xglx = qmxg[x]["type"] xgsz = qmxg[x]["value"] xgdj = qmxg[x]["freeze"] if xgdj == nil or xgdj == "" then gg.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) else gg.addListItems({[1] = {address = xgpy, flags = xglx, freeze = xgdj, value = xgsz}}) end xgsl = xgsl + 1 xgjg = true end end function xqmnb(qmnb) gg.clearResults() gg.setRanges(qmnb[1]["memory"]) gg.searchNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "Open failed") else gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "Open failed") else sl = gg.getResults(999999) sz = gg.getResultCount() xgsl = 0 if sz > 999999 then sz = 999999 end for i = 1, sz do pdsz = true for v = 4, #(qmnb) do if pdsz == true then pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + qmnb[v]["offset"] pysz[1].flags = qmnb[v]["type"] szpy = gg.getValues(pysz) pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value szpd = split(pdpd, ";") tzszpd = szpd[1] pyszpd = szpd[2] if tzszpd == pyszpd then pdjg = true pdsz = true else pdjg = false pdsz = false end end end if pdjg == true then szpy = sl[i].address xgxc(szpy, qmxg) end end if xgjg == true then gg.toast(qmnb[2]["name"] .. "Opensuccess,Totalmodify" .. xgsl .. "Article data") else gg.toast(qmnb[2]["name"] .. "Open failed") end end end end
function Fxs(Search, Write,Neicun,Mingcg,Shuzhiliang)  gg.clearResults()  gg.setRanges(Neicun)  gg.setVisible(false)  gg.searchNumber(Search[1][1], Search[1][3])  local count = gg.getResultCount()  local result = gg.getResults(count)  gg.clearResults()  local data = {}   local base = Search[1][2]    if (count > 0) then  for i, v in ipairs(result) do  v.isUseful = true  end  for k=2, #Search do  local tmp = {}  local offset = Search[k][2] - base   local num = Search[k][1]    for i, v in ipairs(result) do  tmp[#tmp+1] = {}  tmp[#tmp].address = v.address + offset  tmp[#tmp].flags = Search[k][3]  end    tmp = gg.getValues(tmp)    for i, v in ipairs(tmp) do  if ( tostring(v.value) ~= tostring(num) ) then  result[i].isUseful = false  end  end  end    for i, v in ipairs(result) do  if (v.isUseful) then  data[#data+1] = v.address  end  end  if (#data > 0) then  gg.toast(Mingcg.."Ë¨≥ÊáÉÔΩ¥ÔΩ¢ËõªÔΩ∞"..#data.."Ë≠öÔΩ°Ë¨®ÔΩ∞Ë¨êÔΩÆ")  local t = {}  local base = Search[1][2]  if Shuzhiliang == "" and Shuzhiliang > 0 and Shuzhiliang < #data then   Shuzhiliang=Shuzhiliang  else  Shuzhiliang=#data  end  for i=1, Shuzhiliang do  for k, w in ipairs(Write) do  offset = w[2] - base  t[#t+1] = {}  t[#t].address = data[i] + offset  t[#t].flags = w[3]  t[#t].value = w[1]  if (w[4] == true) then  local item = {}  item[#item+1] = t[#t]  item[#item].freeze = true  gg.addListItems(item)  end  end  end  gg.setValues(t)  gg.toast(Mingcg.."already edited"..#t.."Article data")     gg.addListItems(t)  else  gg.toast(Mingcg.."Open failed", false)  return false  end  else  gg.toast("Search failed") return false  end end  
qmnb = {
{["memory"] = 32},
{["name"] = "ACTIVE Á¨®ÔøΩ ÓÅûÔøΩHAVE FUN!ÓÅûÁ∑è"},
{["value"] = 1400129, ["type"] = 4},
{["lv"] = 519, ["offset"] = 4, ["type"] = 4},
}
qmxg = {
{["value"] = 1405628, ["offset"] = 0, ["type"] = 4},

}
xqmnb(qmnb)
gg.clearResults()
end -- Decrypt CVaRy

function G()
gg.searchNumber("10100400 ", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("10100400 ", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("1101004086", gg.TYPE_DWORD)
end -- Decrypt CVaRy

function n()
gg.searchNumber("10100400 ", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("10100400 ", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("1101004045 ", gg.TYPE_DWORD)
gg.toast("M416 BUZ DIYARI")
end

function u()
gg.searchNumber("10100400 ", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("10100400 ", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("1101004062", gg.TYPE_DWORD)
end

function l()
gg.searchNumber("10100100", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("10100100", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("1101001089", gg.TYPE_DWORD)
end

function hiz()
ON = gg.multiChoice({
 "·ñ¥·í™·ó©’è·ïº 1 (T·ó¥·ïº·í™IK·ó¥)",
 "·ñ¥·í™·ó©’è·ïº 2 (T·ó¥·ïº·í™IK·ó¥)",
 "·òú·ó¥·ñáI",
 }, nil, "·ó¥·òú·í™·ó¥·ëé·ëï·ó¥ ·ó∞·ó¥·ëé·ëå")
if ON == nil then
else 
if ON[1] == true then FLASH1()end -- Decrypt CVaRy
if ON[2] == true then FLASH2()end
if ON[3] == true then HOME()end
end -- Decrypt CVaRy
PUBGMH = -1
end -- Decrypt CVaRy


function FLASH1()
gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("1,873,498,234,778,812,417", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("1,873,498,234,778,812,417", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("1,873,498,234,778,812,417", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(550292)
gg.editAll("1,873,498,234,778,812,416", gg.TYPE_QWORD)
gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("403,635,275,035,574,273", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("403,635,275,035,574,273", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("403,635,275,035,574,273", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
 gg.getResults(550292)
gg.editAll("403,635,275,035,574,272", gg.TYPE_QWORD)
gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("-2,044,616,634,647,180,784", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("-2,044,616,634,647,180,784", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("-2,044,616,634,647,180,784", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(550292)
gg.editAll("-2,044,616,634,647,180,800", gg.TYPE_QWORD)
gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("-1296744149883614555", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("-1296744149883614555", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("-1296744149883614555", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(550292)
gg.editAll("-1296744153870237696", gg.TYPE_QWORD)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_C_DATA | gg.REGION_CODE_APP)
gg.searchNumber("-6.1526231e27;-1.0070975e28::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("-6.1526231e27", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1)
gg.editAll("0", gg.TYPE_FLOAT)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("16;4,575,657,222,473,777,152;1,065,353,216;17,179,869,188:37", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1000)
gg.searchNumber("4,575,657,222,473,777,152", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(500)
gg.editAll("4,575,657,222,488,624,988", gg.TYPE_QWORD)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("1,133,903,872;4,611,686,019,455,831,245;1,103,626,240;4,575,657,222,517,817,344:25", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1000)
gg.searchNumber("4,611,686,019,455,831,245", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(500)
gg.editAll("4,611,686,019,501,674,988", gg.TYPE_QWORD)
gg.clearResults()
end
function FLASH2()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("1;1;1;0.0001;20;0.0005;0.4::50", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
gg.editAll("1.2,5", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("-1,296,744,149,883,614,555", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(9999999)
gg.editAll(" -1,296,744,153,870,237,696", gg.TYPE_QWORD)
gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("-1,904,987,454,010,553,855", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(9999999)
gg.editAll("-1,904,987,454,002,165,247", gg.TYPE_QWORD)
gg.clearResults()
  end

function EXIT()
print("‚ï†‚ïê‚ïê‚û£ T·¥Ä·¥ç·¥Ä·¥ç·¥á…¥ V…™·¥ò K·¥è·¥Ö ü·¥Ä Ä·¥Ö·¥Ä…¥ Y·¥Ä·¥ò…™ ü·¥ç…™s·¥õ…™ Ä")
gg.skipRestoreState()
gg.setVisible(true)
  os.exit()
end -- Decrypt CVaRy
while true do
  if gg.isVisible(true) then
    PUBGMH = 1
  gg.setVisible(false)
  end -- Decrypt CVaRy
gg.clearResults()
  if PUBGMH == 1 then
    HOME()
  end -- Decrypt CVaRy
end -- Decrypt CVaRy